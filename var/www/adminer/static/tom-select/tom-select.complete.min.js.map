{"version":3,"file":"tom-select.complete.min.js","sources":["../../src/contrib/microevent.ts","../../node_modules/@orchidjs/unicode-variants/dist/esm/regex.js","../../node_modules/@orchidjs/unicode-variants/dist/esm/strings.js","../../node_modules/@orchidjs/unicode-variants/dist/esm/index.js","../../node_modules/@orchidjs/sifter/dist/esm/utils.js","../../node_modules/@orchidjs/sifter/dist/esm/sifter.js","../../src/utils.ts","../../src/vanilla.ts","../../src/contrib/highlight.ts","../../src/constants.ts","../../src/defaults.ts","../../src/getSettings.ts","../../src/tom-select.ts","../../src/contrib/microplugin.ts","../../src/tom-select.complete.ts","../../src/plugins/change_listener/plugin.ts","../../src/plugins/checkbox_options/plugin.ts","../../src/plugins/clear_button/plugin.ts","../../src/plugins/drag_drop/plugin.ts","../../src/plugins/dropdown_header/plugin.ts","../../src/plugins/caret_position/plugin.ts","../../src/plugins/dropdown_input/plugin.ts","../../src/plugins/input_autogrow/plugin.ts","../../src/plugins/no_backspace_delete/plugin.ts","../../src/plugins/no_active_items/plugin.ts","../../src/plugins/optgroup_columns/plugin.ts","../../src/plugins/remove_button/plugin.ts","../../src/plugins/restore_on_backspace/plugin.ts","../../src/plugins/virtual_scroll/plugin.ts"],"sourcesContent":["/**\r\n * MicroEvent - to make any js object an event emitter\r\n *\r\n * - pure javascript - server compatible, browser compatible\r\n * - dont rely on the browser doms\r\n * - super simple - you get it immediatly, no mistery, no magic involved\r\n *\r\n * @author Jerome Etienne (https://github.com/jeromeetienne)\r\n */\r\n\r\ntype TCallback = (...args:any) => any;\r\n\r\n/**\r\n * Execute callback for each event in space separated list of event names\r\n *\r\n */\r\nfunction forEvents(events:string,callback:(event:string)=>any){\r\n\tevents.split(/\\s+/).forEach((event) =>{\r\n\t\tcallback(event);\r\n\t});\r\n}\r\n\r\nexport default class MicroEvent{\r\n\r\n\tpublic _events: {[key:string]:TCallback[]};\r\n\r\n\tconstructor(){\r\n\t\tthis._events = {};\r\n\t}\r\n\r\n\ton(events:string, fct:TCallback){\r\n\t\tforEvents(events,(event) => {\r\n\t\t\tconst event_array = this._events[event] || [];\r\n\t\t\tevent_array.push(fct);\r\n\t\t\tthis._events[event] = event_array;\r\n\t\t});\r\n\t}\r\n\r\n\toff(events:string, fct:TCallback){\r\n\t\tvar n = arguments.length;\r\n\t\tif( n === 0 ){\r\n\t\t\tthis._events = {};\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tforEvents(events,(event) => {\r\n\r\n\t\t\tif (n === 1){\r\n\t\t\t\tdelete this._events[event];\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst event_array = this._events[event];\r\n\t\t\tif( event_array === undefined ) return;\r\n\r\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\r\n\t\t\tthis._events[event] = event_array;\r\n\t\t});\r\n\t}\r\n\r\n\ttrigger(events:string, ...args:any){\r\n\t\tvar self = this;\r\n\r\n\t\tforEvents(events,(event) => {\r\n\t\t\tconst event_array = self._events[event];\r\n\t\t\tif( event_array === undefined ) return;\r\n\t\t\tevent_array.forEach(fct => {\r\n\t\t\t\tfct.apply(self, args );\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t}\r\n};\r\n","/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n */\nexport const arrayToPattern = (chars) => {\n    chars = chars.filter(Boolean);\n    if (chars.length < 2) {\n        return chars[0] || '';\n    }\n    return (maxValueLength(chars) == 1) ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\nexport const sequencePattern = (array) => {\n    if (!hasDuplicates(array)) {\n        return array.join('');\n    }\n    let pattern = '';\n    let prev_char_count = 0;\n    const prev_pattern = () => {\n        if (prev_char_count > 1) {\n            pattern += '{' + prev_char_count + '}';\n        }\n    };\n    array.forEach((char, i) => {\n        if (char === array[i - 1]) {\n            prev_char_count++;\n            return;\n        }\n        prev_pattern();\n        pattern += char;\n        prev_char_count = 1;\n    });\n    prev_pattern();\n    return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n */\nexport const setToPattern = (chars) => {\n    let array = Array.from(chars);\n    return arrayToPattern(array);\n};\n/**\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n */\nexport const hasDuplicates = (array) => {\n    return (new Set(array)).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n */\nexport const escape_regex = (str) => {\n    return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n */\nexport const maxValueLength = (array) => {\n    return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\nexport const unicodeLength = (str) => {\n    return Array.from(str).length;\n};\n//# sourceMappingURL=regex.js.map","/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n */\nexport const allSubstrings = (input) => {\n    if (input.length === 1)\n        return [[input]];\n    let result = [];\n    const start = input.substring(1);\n    const suba = allSubstrings(start);\n    suba.forEach(function (subresult) {\n        let tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n    return result;\n};\n//# sourceMappingURL=strings.js.map","import { setToPattern, arrayToPattern, escape_regex, sequencePattern } from \"./regex.js\";\nimport { allSubstrings } from \"./strings.js\";\nexport const code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\nexport let unicode_map;\nlet multi_char_reg;\nconst max_char_length = 3;\nconst latin_convert = {};\nconst latin_condensed = {\n    '/': '⁄∕',\n    '0': '߀',\n    \"a\": \"ⱥɐɑ\",\n    \"aa\": \"ꜳ\",\n    \"ae\": \"æǽǣ\",\n    \"ao\": \"ꜵ\",\n    \"au\": \"ꜷ\",\n    \"av\": \"ꜹꜻ\",\n    \"ay\": \"ꜽ\",\n    \"b\": \"ƀɓƃ\",\n    \"c\": \"ꜿƈȼↄ\",\n    \"d\": \"đɗɖᴅƌꮷԁɦ\",\n    \"e\": \"ɛǝᴇɇ\",\n    \"f\": \"ꝼƒ\",\n    \"g\": \"ǥɠꞡᵹꝿɢ\",\n    \"h\": \"ħⱨⱶɥ\",\n    \"i\": \"ɨı\",\n    \"j\": \"ɉȷ\",\n    \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n    \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n    \"m\": \"ɱɯϻ\",\n    \"n\": \"ꞥƞɲꞑᴎлԉ\",\n    \"o\": \"øǿɔɵꝋꝍᴑ\",\n    \"oe\": \"œ\",\n    \"oi\": \"ƣ\",\n    \"oo\": \"ꝏ\",\n    \"ou\": \"ȣ\",\n    \"p\": \"ƥᵽꝑꝓꝕρ\",\n    \"q\": \"ꝗꝙɋ\",\n    \"r\": \"ɍɽꝛꞧꞃ\",\n    \"s\": \"ßȿꞩꞅʂ\",\n    \"t\": \"ŧƭʈⱦꞇ\",\n    \"th\": \"þ\",\n    \"tz\": \"ꜩ\",\n    \"u\": \"ʉ\",\n    \"v\": \"ʋꝟʌ\",\n    \"vy\": \"ꝡ\",\n    \"w\": \"ⱳ\",\n    \"y\": \"ƴɏỿ\",\n    \"z\": \"ƶȥɀⱬꝣ\",\n    \"hv\": \"ƕ\"\n};\nfor (let latin in latin_condensed) {\n    let unicode = latin_condensed[latin] || '';\n    for (let i = 0; i < unicode.length; i++) {\n        let char = unicode.substring(i, i + 1);\n        latin_convert[char] = latin;\n    }\n}\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n */\nexport const initialize = (_code_points) => {\n    if (unicode_map !== undefined)\n        return;\n    unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n */\nexport const normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n */\nexport const asciifold = (str) => {\n    return Array.from(str).reduce(\n    /**\n     * @param {string} result\n     * @param {string} char\n     */\n    (result, char) => {\n        return result + _asciifold(char);\n    }, '');\n};\nexport const _asciifold = (str) => {\n    str = normalize(str)\n        .toLowerCase()\n        .replace(convert_pat, (/** @type {string} */ char) => {\n        return latin_convert[char] || '';\n    });\n    //return str;\n    return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n */\nexport function* generator(code_points) {\n    for (const [code_point_min, code_point_max] of code_points) {\n        for (let i = code_point_min; i <= code_point_max; i++) {\n            let composed = String.fromCharCode(i);\n            let folded = asciifold(composed);\n            if (folded == composed.toLowerCase()) {\n                continue;\n            }\n            // skip when folded is a string longer than 3 characters long\n            // bc the resulting regex patterns will be long\n            // eg:\n            // folded صلى الله عليه وسلم length 18 code point 65018\n            // folded جل جلاله length 8 code point 65019\n            if (folded.length > max_char_length) {\n                continue;\n            }\n            if (folded.length == 0) {\n                continue;\n            }\n            yield { folded: folded, composed: composed, code_point: i };\n        }\n    }\n}\n/**\n * Generate a unicode map from the list of code points\n */\nexport const generateSets = (code_points) => {\n    const unicode_sets = {};\n    const addMatching = (folded, to_add) => {\n        /** @type {Set<string>} */\n        const folded_set = unicode_sets[folded] || new Set();\n        const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n        if (to_add.match(patt)) {\n            return;\n        }\n        folded_set.add(escape_regex(to_add));\n        unicode_sets[folded] = folded_set;\n    };\n    for (let value of generator(code_points)) {\n        addMatching(value.folded, value.folded);\n        addMatching(value.folded, value.composed);\n    }\n    return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n */\nexport const generateMap = (code_points) => {\n    const unicode_sets = generateSets(code_points);\n    const unicode_map = {};\n    let multi_char = [];\n    for (let folded in unicode_sets) {\n        let set = unicode_sets[folded];\n        if (set) {\n            unicode_map[folded] = setToPattern(set);\n        }\n        if (folded.length > 1) {\n            multi_char.push(escape_regex(folded));\n        }\n    }\n    multi_char.sort((a, b) => b.length - a.length);\n    const multi_char_patt = arrayToPattern(multi_char);\n    multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n    return unicode_map;\n};\n/**\n * Map each element of an array from its folded value to all possible unicode matches\n */\nexport const mapSequence = (strings, min_replacement = 1) => {\n    let chars_replaced = 0;\n    strings = strings.map((str) => {\n        if (unicode_map[str]) {\n            chars_replaced += str.length;\n        }\n        return unicode_map[str] || str;\n    });\n    if (chars_replaced >= min_replacement) {\n        return sequencePattern(strings);\n    }\n    return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n */\nexport const substringsToPattern = (str, min_replacement = 1) => {\n    min_replacement = Math.max(min_replacement, str.length - 1);\n    return arrayToPattern(allSubstrings(str).map((sub_pat) => {\n        return mapSequence(sub_pat, min_replacement);\n    }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n */\nconst sequencesToPattern = (sequences, all = true) => {\n    let min_replacement = sequences.length > 1 ? 1 : 0;\n    return arrayToPattern(sequences.map((sequence) => {\n        let seq = [];\n        const len = all ? sequence.length() : sequence.length() - 1;\n        for (let j = 0; j < len; j++) {\n            seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n        }\n        return sequencePattern(seq);\n    }));\n};\n/**\n * Return true if the sequence is already in the sequences\n */\nconst inSequences = (needle_seq, sequences) => {\n    for (const seq of sequences) {\n        if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n            continue;\n        }\n        if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n            continue;\n        }\n        let needle_parts = needle_seq.parts;\n        const filter = (part) => {\n            for (const needle_part of needle_parts) {\n                if (needle_part.start === part.start && needle_part.substr === part.substr) {\n                    return false;\n                }\n                if (part.length == 1 || needle_part.length == 1) {\n                    continue;\n                }\n                // check for overlapping parts\n                // a = ['::=','==']\n                // b = ['::','===']\n                // a = ['r','sm']\n                // b = ['rs','m']\n                if (part.start < needle_part.start && part.end > needle_part.start) {\n                    return true;\n                }\n                if (needle_part.start < part.start && needle_part.end > part.start) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        let filtered = seq.parts.filter(filter);\n        if (filtered.length > 0) {\n            continue;\n        }\n        return true;\n    }\n    return false;\n};\nclass Sequence {\n    parts;\n    substrs;\n    start;\n    end;\n    constructor() {\n        this.parts = [];\n        this.substrs = [];\n        this.start = 0;\n        this.end = 0;\n    }\n    add(part) {\n        if (part) {\n            this.parts.push(part);\n            this.substrs.push(part.substr);\n            this.start = Math.min(part.start, this.start);\n            this.end = Math.max(part.end, this.end);\n        }\n    }\n    last() {\n        return this.parts[this.parts.length - 1];\n    }\n    length() {\n        return this.parts.length;\n    }\n    clone(position, last_piece) {\n        let clone = new Sequence();\n        let parts = JSON.parse(JSON.stringify(this.parts));\n        let last_part = parts.pop();\n        for (const part of parts) {\n            clone.add(part);\n        }\n        let last_substr = last_piece.substr.substring(0, position - last_part.start);\n        let clone_last_len = last_substr.length;\n        clone.add({ start: last_part.start, end: last_part.start + clone_last_len, length: clone_last_len, substr: last_substr });\n        return clone;\n    }\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n */\nexport const getPattern = (str) => {\n    initialize();\n    str = asciifold(str);\n    let pattern = '';\n    let sequences = [new Sequence()];\n    for (let i = 0; i < str.length; i++) {\n        let substr = str.substring(i);\n        let match = substr.match(multi_char_reg);\n        const char = str.substring(i, i + 1);\n        const match_str = match ? match[0] : null;\n        // loop through sequences\n        // add either the char or multi_match\n        let overlapping = [];\n        let added_types = new Set();\n        for (const sequence of sequences) {\n            const last_piece = sequence.last();\n            if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n                // if we have a multi match\n                if (match_str) {\n                    const len = match_str.length;\n                    sequence.add({ start: i, end: i + len, length: len, substr: match_str });\n                    added_types.add('1');\n                }\n                else {\n                    sequence.add({ start: i, end: i + 1, length: 1, substr: char });\n                    added_types.add('2');\n                }\n            }\n            else if (match_str) {\n                let clone = sequence.clone(i, last_piece);\n                const len = match_str.length;\n                clone.add({ start: i, end: i + len, length: len, substr: match_str });\n                overlapping.push(clone);\n            }\n            else {\n                // don't add char\n                // adding would create invalid patterns: 234 => [2,34,4]\n                added_types.add('3');\n            }\n        }\n        // if we have overlapping\n        if (overlapping.length > 0) {\n            // ['ii','iii'] before ['i','i','iii']\n            overlapping = overlapping.sort((a, b) => {\n                return a.length() - b.length();\n            });\n            for (let clone of overlapping) {\n                // don't add if we already have an equivalent sequence\n                if (inSequences(clone, sequences)) {\n                    continue;\n                }\n                sequences.push(clone);\n            }\n            continue;\n        }\n        // if we haven't done anything unique\n        // clean up the patterns\n        // helps keep patterns smaller\n        // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n        if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n            pattern += sequencesToPattern(sequences, false);\n            let new_seq = new Sequence();\n            const old_seq = sequences[0];\n            if (old_seq) {\n                new_seq.add(old_seq.last());\n            }\n            sequences = [new_seq];\n        }\n    }\n    pattern += sequencesToPattern(sequences, true);\n    return pattern;\n};\nexport { escape_regex };\n//# sourceMappingURL=index.js.map","import { asciifold } from '@orchidjs/unicode-variants';\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj, name) => {\n    if (!obj)\n        return;\n    return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj, name) => {\n    if (!obj)\n        return;\n    var part, names = name.split(\".\");\n    while ((part = names.shift()) && (obj = obj[part]))\n        ;\n    return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value, token, weight) => {\n    var score, pos;\n    if (!value)\n        return 0;\n    value = value + '';\n    if (token.regex == null)\n        return 0;\n    pos = value.search(token.regex);\n    if (pos === -1)\n        return 0;\n    score = token.string.length / value.length;\n    if (pos === 0)\n        score += 0.5;\n    return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj, key) => {\n    var value = obj[key];\n    if (typeof value == 'function')\n        return value;\n    if (value && !Array.isArray(value)) {\n        obj[key] = [value];\n    }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object, callback) => {\n    if (Array.isArray(object)) {\n        object.forEach(callback);\n    }\n    else {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                callback(object[key], key);\n            }\n        }\n    }\n};\nexport const cmp = (a, b) => {\n    if (typeof a === 'number' && typeof b === 'number') {\n        return a > b ? 1 : (a < b ? -1 : 0);\n    }\n    a = asciifold(a + '').toLowerCase();\n    b = asciifold(b + '').toLowerCase();\n    if (a > b)\n        return 1;\n    if (b > a)\n        return -1;\n    return 0;\n};\n//# sourceMappingURL=utils.js.map","/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\nimport { scoreValue, getAttr, getAttrNesting, propToArray, iterate, cmp } from \"./utils.js\";\nimport { getPattern, escape_regex } from '@orchidjs/unicode-variants';\nclass Sifter {\n    items; // []|{};\n    settings;\n    /**\n     * Textually searches arrays and hashes of objects\n     * by property (or multiple properties). Designed\n     * specifically for autocomplete.\n     *\n     */\n    constructor(items, settings) {\n        this.items = items;\n        this.settings = settings || { diacritics: true };\n    }\n    ;\n    /**\n     * Splits a search string into an array of individual\n     * regexps to be used to match results.\n     *\n     */\n    tokenize(query, respect_word_boundaries, weights) {\n        if (!query || !query.length)\n            return [];\n        const tokens = [];\n        const words = query.split(/\\s+/);\n        var field_regex;\n        if (weights) {\n            field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n        }\n        words.forEach((word) => {\n            let field_match;\n            let field = null;\n            let regex = null;\n            // look for \"field:query\" tokens\n            if (field_regex && (field_match = word.match(field_regex))) {\n                field = field_match[1];\n                word = field_match[2];\n            }\n            if (word.length > 0) {\n                if (this.settings.diacritics) {\n                    regex = getPattern(word) || null;\n                }\n                else {\n                    regex = escape_regex(word);\n                }\n                if (regex && respect_word_boundaries)\n                    regex = \"\\\\b\" + regex;\n            }\n            tokens.push({\n                string: word,\n                regex: regex ? new RegExp(regex, 'iu') : null,\n                field: field,\n            });\n        });\n        return tokens;\n    }\n    ;\n    /**\n     * Returns a function to be used to score individual results.\n     *\n     * Good matches will have a higher score than poor matches.\n     * If an item is not a match, 0 will be returned by the function.\n     *\n     * @returns {T.ScoreFn}\n     */\n    getScoreFunction(query, options) {\n        var search = this.prepareSearch(query, options);\n        return this._getScoreFunction(search);\n    }\n    /**\n     * @returns {T.ScoreFn}\n     *\n     */\n    _getScoreFunction(search) {\n        const tokens = search.tokens, token_count = tokens.length;\n        if (!token_count) {\n            return function () { return 0; };\n        }\n        const fields = search.options.fields, weights = search.weights, field_count = fields.length, getAttrFn = search.getAttrFn;\n        if (!field_count) {\n            return function () { return 1; };\n        }\n        /**\n         * Calculates the score of an object\n         * against the search query.\n         *\n         */\n        const scoreObject = (function () {\n            if (field_count === 1) {\n                return function (token, data) {\n                    const field = fields[0].field;\n                    return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n                };\n            }\n            return function (token, data) {\n                var sum = 0;\n                // is the token specific to a field?\n                if (token.field) {\n                    const value = getAttrFn(data, token.field);\n                    if (!token.regex && value) {\n                        sum += (1 / field_count);\n                    }\n                    else {\n                        sum += scoreValue(value, token, 1);\n                    }\n                }\n                else {\n                    iterate(weights, (weight, field) => {\n                        sum += scoreValue(getAttrFn(data, field), token, weight);\n                    });\n                }\n                return sum / field_count;\n            };\n        })();\n        if (token_count === 1) {\n            return function (data) {\n                return scoreObject(tokens[0], data);\n            };\n        }\n        if (search.options.conjunction === 'and') {\n            return function (data) {\n                var score, sum = 0;\n                for (let token of tokens) {\n                    score = scoreObject(token, data);\n                    if (score <= 0)\n                        return 0;\n                    sum += score;\n                }\n                return sum / token_count;\n            };\n        }\n        else {\n            return function (data) {\n                var sum = 0;\n                iterate(tokens, (token) => {\n                    sum += scoreObject(token, data);\n                });\n                return sum / token_count;\n            };\n        }\n    }\n    ;\n    /**\n     * Returns a function that can be used to compare two\n     * results, for sorting purposes. If no sorting should\n     * be performed, `null` will be returned.\n     *\n     * @return function(a,b)\n     */\n    getSortFunction(query, options) {\n        var search = this.prepareSearch(query, options);\n        return this._getSortFunction(search);\n    }\n    _getSortFunction(search) {\n        var implicit_score, sort_flds = [];\n        const self = this, options = search.options, sort = (!search.query && options.sort_empty) ? options.sort_empty : options.sort;\n        if (typeof sort == 'function') {\n            return sort.bind(this);\n        }\n        /**\n         * Fetches the specified sort field value\n         * from a search result item.\n         *\n         */\n        const get_field = function (name, result) {\n            if (name === '$score')\n                return result.score;\n            return search.getAttrFn(self.items[result.id], name);\n        };\n        // parse options\n        if (sort) {\n            for (let s of sort) {\n                if (search.query || s.field !== '$score') {\n                    sort_flds.push(s);\n                }\n            }\n        }\n        // the \"$score\" field is implied to be the primary\n        // sort field, unless it's manually specified\n        if (search.query) {\n            implicit_score = true;\n            for (let fld of sort_flds) {\n                if (fld.field === '$score') {\n                    implicit_score = false;\n                    break;\n                }\n            }\n            if (implicit_score) {\n                sort_flds.unshift({ field: '$score', direction: 'desc' });\n            }\n            // without a search.query, all items will have the same score\n        }\n        else {\n            sort_flds = sort_flds.filter((fld) => fld.field !== '$score');\n        }\n        // build function\n        const sort_flds_count = sort_flds.length;\n        if (!sort_flds_count) {\n            return null;\n        }\n        return function (a, b) {\n            var result, field;\n            for (let sort_fld of sort_flds) {\n                field = sort_fld.field;\n                let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n                result = multiplier * cmp(get_field(field, a), get_field(field, b));\n                if (result)\n                    return result;\n            }\n            return 0;\n        };\n    }\n    ;\n    /**\n     * Parses a search query and returns an object\n     * with tokens and fields ready to be populated\n     * with results.\n     *\n     */\n    prepareSearch(query, optsUser) {\n        const weights = {};\n        var options = Object.assign({}, optsUser);\n        propToArray(options, 'sort');\n        propToArray(options, 'sort_empty');\n        // convert fields to new format\n        if (options.fields) {\n            propToArray(options, 'fields');\n            const fields = [];\n            options.fields.forEach((field) => {\n                if (typeof field == 'string') {\n                    field = { field: field, weight: 1 };\n                }\n                fields.push(field);\n                weights[field.field] = ('weight' in field) ? field.weight : 1;\n            });\n            options.fields = fields;\n        }\n        return {\n            options: options,\n            query: query.toLowerCase().trim(),\n            tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n            total: 0,\n            items: [],\n            weights: weights,\n            getAttrFn: (options.nesting) ? getAttrNesting : getAttr,\n        };\n    }\n    ;\n    /**\n     * Searches through all items and returns a sorted array of matches.\n     *\n     */\n    search(query, options) {\n        var self = this, score, search;\n        search = this.prepareSearch(query, options);\n        options = search.options;\n        query = search.query;\n        // generate result scoring function\n        const fn_score = options.score || self._getScoreFunction(search);\n        // perform search and sort\n        if (query.length) {\n            iterate(self.items, (item, id) => {\n                score = fn_score(item);\n                if (options.filter === false || score > 0) {\n                    search.items.push({ 'score': score, 'id': id });\n                }\n            });\n        }\n        else {\n            iterate(self.items, (_, id) => {\n                search.items.push({ 'score': 1, 'id': id });\n            });\n        }\n        const fn_sort = self._getSortFunction(search);\n        if (fn_sort)\n            search.items.sort(fn_sort);\n        // apply limits\n        search.total = search.items.length;\n        if (typeof options.limit === 'number') {\n            search.items = search.items.slice(0, options.limit);\n        }\n        return search;\n    }\n    ;\n}\nexport { Sifter, scoreValue, getAttr, getAttrNesting, propToArray, iterate, cmp, getPattern };\nexport * from \"./types.js\";\n//# sourceMappingURL=sifter.js.map","\r\nimport type TomSelect from './tom-select.ts';\r\nimport { TomLoadCallback } from './types/index.ts';\r\n\r\n\r\n/**\r\n * Converts a scalar to its best string representation\r\n * for hash keys and HTML attribute values.\r\n *\r\n * Transformations:\r\n *   'str'     -> 'str'\r\n *   null      -> ''\r\n *   undefined -> ''\r\n *   true      -> '1'\r\n *   false     -> '0'\r\n *   0         -> '0'\r\n *   1         -> '1'\r\n *\r\n */\r\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\r\n\tif (typeof value === 'undefined' || value === null) return null;\r\n\treturn get_hash(value);\r\n};\r\n\r\nexport const get_hash = (value:boolean|string|number):string => {\r\n\tif (typeof value === 'boolean') return value ? '1' : '0';\r\n\treturn value + '';\r\n};\r\n\r\n/**\r\n * Escapes a string for use within HTML.\r\n *\r\n */\r\nexport const escape_html = (str:string):string => {\r\n\treturn (str + '')\r\n\t\t.replace(/&/g, '&amp;')\r\n\t\t.replace(/</g, '&lt;')\r\n\t\t.replace(/>/g, '&gt;')\r\n\t\t.replace(/\"/g, '&quot;');\r\n};\r\n\r\n\r\n/**\r\n * use setTimeout if timeout > 0 \r\n */\r\nexport const timeout = (fn:()=>void,timeout:number): number | null => {\r\n\tif( timeout > 0 ){\r\n\t\treturn window.setTimeout(fn,timeout);\r\n\t}\r\n\r\n\tfn.call(null);\r\n\treturn null;\r\n}\r\n\r\n/**\r\n * Debounce the user provided load function\r\n *\r\n */\r\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\r\n\tvar timeout: null|ReturnType<typeof setTimeout>;\r\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\r\n\t\tvar self = this;\r\n\r\n\t\tif( timeout ){\r\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\r\n\t\t\tclearTimeout(timeout);\r\n\t\t}\r\n\t\ttimeout = setTimeout(function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tself.loadedSearches[value] = true;\r\n\t\t\tfn.call(self, value, callback);\r\n\r\n\t\t}, delay);\r\n\t};\r\n};\r\n\r\n\r\n/**\r\n * Debounce all fired events types listed in `types`\r\n * while executing the provided `fn`.\r\n *\r\n */\r\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\r\n\tvar type:string;\r\n\tvar trigger = self.trigger;\r\n\tvar event_args:{ [key: string]: any } = {};\r\n\r\n\t// override trigger method\r\n\tself.trigger = function(){\r\n\t\tvar type = arguments[0];\r\n\t\tif (types.indexOf(type) !== -1) {\r\n\t\t\tevent_args[type] = arguments;\r\n\t\t} else {\r\n\t\t\treturn trigger.apply(self, arguments);\r\n\t\t}\r\n\t};\r\n\r\n\t// invoke provided function\r\n\tfn.apply(self, []);\r\n\tself.trigger = trigger;\r\n\r\n\t// trigger queued events\r\n\tfor( type of types ){\r\n\t\tif( type in event_args ){\r\n\t\t\ttrigger.apply(self, event_args[type]);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Determines the current selection within a text input control.\r\n * Returns an object containing:\r\n *   - start\r\n *   - length\r\n *\r\n * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\r\n * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\r\n */\r\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\r\n\treturn {\r\n\t\tstart\t: input.selectionStart || 0,\r\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\r\n\t};\r\n};\r\n\r\n\r\n/**\r\n * Prevent default\r\n *\r\n */\r\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\r\n\tif( evt ){\r\n\t\tevt.preventDefault();\r\n\t\tif( stop ){\r\n\t\t\tevt.stopPropagation();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Add event helper\r\n *\r\n */\r\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\r\n\ttarget.addEventListener(type,callback,options);\r\n};\r\n\r\n\r\n/**\r\n * Return true if the requested key is down\r\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\r\n * The current evt may not always set ( eg calling advanceSelection() )\r\n *\r\n */\r\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\r\n\r\n\tif( !evt ){\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif( !evt[key_name] ){\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\r\n\r\n\tif( count === 1 ){\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/**\r\n * Get the id of an element\r\n * If the id attribute is not set, set the attribute with the given id\r\n *\r\n */\r\nexport const getId = (el:Element,id:string) => {\r\n\tconst existing_id = el.getAttribute('id');\r\n\tif( existing_id ){\r\n\t\treturn existing_id;\r\n\t}\r\n\r\n\tel.setAttribute('id',id);\r\n\treturn id;\r\n};\r\n\r\n\r\n/**\r\n * Returns a string with backslashes added before characters that need to be escaped.\r\n */\r\nexport const addSlashes = (str:string):string => {\r\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\r\n};\r\n\r\n/**\r\n *\r\n */\r\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\r\n\tif( node ) parent.append(node);\r\n};\r\n\r\n/**\r\n * Iterates over arrays and hashes.\r\n *\r\n * ```\r\n * iterate(this.items, function(item, id) {\r\n *    // invoked for each item\r\n * });\r\n * ```\r\n *\r\n */\r\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\r\n\r\n\tif ( Array.isArray(object)) {\r\n\t\tobject.forEach(callback);\r\n\r\n\t}else{\r\n\r\n\t\tfor (var key in object) {\r\n\t\t\tif (object.hasOwnProperty(key)) {\r\n\t\t\t\tcallback(object[key], key);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n","\r\nimport { iterate } from './utils.ts';\r\n\r\n/**\r\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\r\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\r\n *\r\n * param query should be {}\r\n */\r\nexport const getDom = ( query:any ):HTMLElement => {\r\n\r\n\tif( query.jquery ){\r\n\t\treturn query[0];\r\n\t}\r\n\r\n\tif( query instanceof HTMLElement ){\r\n\t\treturn query;\r\n\t}\r\n\r\n\tif( isHtmlString(query) ){\r\n\t\tvar tpl = document.createElement('template');\r\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\r\n\t\treturn tpl.content.firstChild as HTMLElement;\r\n\t}\r\n\r\n\treturn document.querySelector(query);\r\n};\r\n\r\nexport const isHtmlString = (arg:any): boolean => {\r\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport const escapeQuery = (query:string):string => {\r\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\r\n}\r\n\r\n/**\r\n * Dispatch an event\r\n *\r\n */\r\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\r\n\tvar event = document.createEvent('HTMLEvents');\r\n\tevent.initEvent(event_name, true, false);\r\n\tdom_el.dispatchEvent(event)\r\n};\r\n\r\n/**\r\n * Apply CSS rules to a dom element\r\n *\r\n */\r\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\r\n\tObject.assign(dom_el.style, css);\r\n}\r\n\r\n\r\n/**\r\n * Add css classes\r\n *\r\n */\r\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\r\n\r\n\tvar norm_classes \t= classesArray(classes);\r\n\telmts\t\t\t\t= castAsArray(elmts);\r\n\r\n\telmts.map( el => {\r\n\t\tnorm_classes.map( cls => {\r\n\t\t\tel.classList.add( cls );\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n * Remove css classes\r\n *\r\n */\r\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\r\n\r\n \tvar norm_classes \t= classesArray(classes);\r\n\telmts\t\t\t\t= castAsArray(elmts);\r\n\r\n\telmts.map( el => {\r\n\t\tnorm_classes.map(cls => {\r\n\t \t\tel.classList.remove( cls );\r\n\t\t});\r\n \t});\r\n }\r\n\r\n\r\n/**\r\n * Return arguments\r\n *\r\n */\r\nexport const classesArray = (args:string[]|string[][]):string[] => {\r\n\tvar classes:string[] = [];\r\n\titerate( args, (_classes) =>{\r\n\t\tif( typeof _classes === 'string' ){\r\n\t\t\t_classes = _classes.trim().split(/[\\t\\n\\f\\r\\s]/);\r\n\t\t}\r\n\t\tif( Array.isArray(_classes) ){\r\n\t\t\tclasses = classes.concat(_classes);\r\n\t\t}\r\n\t});\r\n\r\n\treturn classes.filter(Boolean);\r\n}\r\n\r\n\r\n/**\r\n * Create an array from arg if it's not already an array\r\n *\r\n */\r\nexport const castAsArray = (arg:any):Array<any> => {\r\n\tif( !Array.isArray(arg) ){\r\n \t\targ = [arg];\r\n \t}\r\n\treturn arg;\r\n}\r\n\r\n\r\n/**\r\n * Get the closest node to the evt.target matching the selector\r\n * Stops at wrapper\r\n *\r\n */\r\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\r\n\r\n\tif( wrapper && !wrapper.contains(target) ){\r\n\t\treturn;\r\n\t}\r\n\r\n\twhile( target && target.matches ){\r\n\r\n\t\tif( target.matches(selector) ){\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\ttarget = target.parentNode as HTMLElement;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Get the first or last item from an array\r\n *\r\n * > 0 - right (last)\r\n * <= 0 - left (first)\r\n *\r\n */\r\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\r\n\r\n\tif( direction > 0 ){\r\n\t\treturn list[list.length-1];\r\n\t}\r\n\r\n\treturn list[0];\r\n}\r\n\r\n/**\r\n * Return true if an object is empty\r\n *\r\n */\r\nexport const isEmptyObject = (obj:object):boolean => {\r\n\treturn (Object.keys(obj).length === 0);\r\n}\r\n\r\n\r\n/**\r\n * Get the index of an element amongst sibling nodes of the same type\r\n *\r\n */\r\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\r\n\tif (!el) return -1;\r\n\r\n\tamongst = amongst || el.nodeName;\r\n\r\n\tvar i = 0;\r\n\twhile( el = el.previousElementSibling ){\r\n\r\n\t\tif( el.matches(amongst) ){\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\treturn i;\r\n}\r\n\r\n\r\n/**\r\n * Set attributes of an element\r\n *\r\n */\r\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\r\n\titerate( attrs,(val,attr) => {\r\n\t\tif( val == null ){\r\n\t\t\tel.removeAttribute(attr as string);\r\n\t\t}else{\r\n\t\t\tel.setAttribute(attr as string, ''+val);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n\r\n/**\r\n * Replace a node\r\n */\r\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\r\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\r\n}\r\n","/**\r\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\r\n * Highlights arbitrary terms in a node.\r\n *\r\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\r\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\r\n */\r\n\r\nimport {replaceNode} from '../vanilla.ts';\r\n\r\n\r\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\r\n\r\n\tif( regex === null ) return;\r\n\r\n\t// convet string to regex\r\n\tif( typeof regex === 'string' ){\r\n\r\n\t\tif( !regex.length ) return;\r\n\t\tregex = new RegExp(regex, 'i');\r\n\t}\r\n\r\n\r\n\t// Wrap matching part of text node with highlighting <span>, e.g.\r\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\r\n\tconst highlightText = ( node:Text ):number => {\r\n\r\n\t\tvar match = node.data.match(regex);\r\n\t\tif( match && node.data.length > 0 ){\r\n\t\t\tvar spannode\t\t= document.createElement('span');\r\n\t\t\tspannode.className\t= 'highlight';\r\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\r\n\r\n\t\t\tmiddlebit.splitText(match[0]!.length);\r\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\r\n\r\n\t\t\tspannode.appendChild(middleclone);\r\n\t\t\treplaceNode(middlebit, spannode);\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// Recurse element node, looking for child text nodes to highlight, unless element\r\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\r\n\tconst highlightChildren = ( node:Element ):void => {\r\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\r\n\t\t\tArray.from(node.childNodes).forEach(element => {\r\n\t\t\t\thighlightRecursive(element);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst highlightRecursive = ( node:Node|Element ):number => {\r\n\r\n\t\tif( node.nodeType === 3 ){\r\n\t\t\treturn highlightText(node as Text);\r\n\t\t}\r\n\r\n\t\thighlightChildren(node as Element);\r\n\r\n\t\treturn 0;\r\n\t};\r\n\r\n\thighlightRecursive( element );\r\n};\r\n\r\n/**\r\n * removeHighlight fn copied from highlight v5 and\r\n * edited to remove with(), pass js strict mode, and use without jquery\r\n */\r\nexport const removeHighlight = (el:HTMLElement) => {\r\n\tvar elements = el.querySelectorAll(\"span.highlight\");\r\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\r\n\t\tvar parent = el.parentNode as Node;\r\n\t\tparent.replaceChild(el.firstChild as Node, el);\r\n\t\tparent.normalize();\r\n\t});\r\n};\r\n","export const KEY_A\t\t\t\t= 65;\r\nexport const KEY_RETURN\t\t\t= 13;\r\nexport const KEY_ESC\t\t\t= 27;\r\nexport const KEY_LEFT\t\t\t= 37;\r\nexport const KEY_UP\t\t\t\t= 38;\r\nexport const KEY_RIGHT\t\t\t= 39;\r\nexport const KEY_DOWN\t\t\t= 40;\r\nexport const KEY_BACKSPACE\t\t= 8;\r\nexport const KEY_DELETE\t\t\t= 46;\r\nexport const KEY_TAB\t\t\t= 9;\r\n\r\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\r\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\r\n","\r\nexport default {\r\n\toptions: [],\r\n\toptgroups: [],\r\n\r\n\tplugins: [],\r\n\tdelimiter: ',',\r\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\r\n\tpersist: true,\r\n\tdiacritics: true,\r\n\tcreate: null,\r\n\tcreateOnBlur: false,\r\n\tcreateFilter: null,\r\n\thighlight: true,\r\n\topenOnFocus: true,\r\n\tshouldOpen: null,\r\n\tmaxOptions: 50,\r\n\tmaxItems: null,\r\n\thideSelected: null,\r\n\tduplicates: false,\r\n\taddPrecedence: false,\r\n\tselectOnTab: false,\r\n\tpreload: null,\r\n\tallowEmptyOption: false,\r\n\t//closeAfterSelect: false,\r\n\trefreshThrottle: 300,\r\n\r\n\r\n\tloadThrottle: 300,\r\n\tloadingClass: 'loading',\r\n\r\n\tdataAttr: null, //'data-data',\r\n\toptgroupField: 'optgroup',\r\n\tvalueField: 'value',\r\n\tlabelField: 'text',\r\n\tdisabledField: 'disabled',\r\n\toptgroupLabelField: 'label',\r\n\toptgroupValueField: 'value',\r\n\tlockOptgroupOrder: false,\r\n\r\n\tsortField: '$order',\r\n\tsearchField: ['text'],\r\n\tsearchConjunction: 'and',\r\n\r\n\tmode: null,\r\n\twrapperClass: 'ts-wrapper',\r\n\tcontrolClass: 'ts-control',\r\n\tdropdownClass: 'ts-dropdown',\r\n\tdropdownContentClass: 'ts-dropdown-content',\r\n\titemClass: 'item',\r\n\toptionClass: 'option',\r\n\r\n\tdropdownParent: null,\r\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\r\n\r\n\tcopyClassesToDropdown: false,\r\n\r\n\tplaceholder: null,\r\n\thidePlaceholder: null,\r\n\r\n\tshouldLoad: function(query:string):boolean{\r\n\t\treturn query.length > 0;\r\n\t},\r\n\r\n\t/*\r\n\tload                 : null, // function(query, callback) { ... }\r\n\tscore                : null, // function(search) { ... }\r\n\tonInitialize         : null, // function() { ... }\r\n\tonChange             : null, // function(value) { ... }\r\n\tonItemAdd            : null, // function(value, $item) { ... }\r\n\tonItemRemove         : null, // function(value) { ... }\r\n\tonClear              : null, // function() { ... }\r\n\tonOptionAdd          : null, // function(value, data) { ... }\r\n\tonOptionRemove       : null, // function(value) { ... }\r\n\tonOptionClear        : null, // function() { ... }\r\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\r\n\tonOptionGroupRemove  : null, // function(id) { ... }\r\n\tonOptionGroupClear   : null, // function() { ... }\r\n\tonDropdownOpen       : null, // function(dropdown) { ... }\r\n\tonDropdownClose      : null, // function(dropdown) { ... }\r\n\tonType               : null, // function(str) { ... }\r\n\tonDelete             : null, // function(values) { ... }\r\n\t*/\r\n\r\n\trender: {\r\n\t\t/*\r\n\t\titem: null,\r\n\t\toptgroup: null,\r\n\t\toptgroup_header: null,\r\n\t\toption: null,\r\n\t\toption_create: null\r\n\t\t*/\r\n\t}\r\n};\r\n","import defaults from './defaults.ts';\r\nimport { hash_key, iterate } from './utils.ts';\r\nimport { TomOption, TomSettings, RecursivePartial } from './types/index.ts';\r\nimport { TomInput } from './types/index.ts';\r\n\r\n\r\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\r\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\r\n\r\n\tvar attr_data\t\t\t\t= settings.dataAttr;\r\n\tvar field_label\t\t\t\t= settings.labelField;\r\n\tvar field_value\t\t\t\t= settings.valueField;\r\n\tvar field_disabled\t\t\t= settings.disabledField;\r\n\tvar field_optgroup\t\t\t= settings.optgroupField;\r\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\r\n\tvar field_optgroup_value\t= settings.optgroupValueField;\r\n\r\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\r\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\r\n\r\n\tif (!placeholder && !settings.allowEmptyOption) {\r\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\r\n\t\tif( option ){\r\n\t\t\tplaceholder = option.textContent;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar settings_element:{\r\n\t\tplaceholder\t: null|string,\r\n\t\toptions\t\t: TomOption[],\r\n\t\toptgroups\t: TomOption[],\r\n\t\titems\t\t: string[],\r\n\t\tmaxItems\t: null|number,\r\n\t} = {\r\n\t\tplaceholder\t: placeholder,\r\n\t\toptions\t\t: [],\r\n\t\toptgroups\t: [],\r\n\t\titems\t\t: [],\r\n\t\tmaxItems\t: null,\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Initialize from a <select> element.\r\n\t *\r\n\t */\r\n\tvar init_select = () => {\r\n\t\tvar tagName;\r\n\t\tvar options = settings_element.options;\r\n\t\tvar optionsMap:{[key:string]:any} = {};\r\n\t\tvar group_count = 1;\r\n\t\tlet $order = 0;\r\n\r\n\t\tvar readData = (el:HTMLElement):TomOption => {\r\n\r\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\r\n\t\t\tvar json\t= attr_data && data[attr_data];\r\n\r\n\t\t\tif( typeof json === 'string' && json.length ){\r\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t};\r\n\r\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\r\n\r\n\t\t\tvar value = hash_key(option.value);\r\n\t\t\tif ( value == null ) return;\r\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\r\n\r\n\t\t\t// if the option already exists, it's probably been\r\n\t\t\t// duplicated in another optgroup. in this case, push\r\n\t\t\t// the current group to the \"optgroup\" property on the\r\n\t\t\t// existing option so that it's rendered in both places.\r\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\r\n\t\t\t\tif (group) {\r\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\r\n\t\t\t\t\tif (!arr) {\r\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\r\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\r\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tarr.push(group);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\r\n\t\t\t\tvar option_data             = readData(option);\r\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\r\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\r\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\r\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\r\n\t\t\t\toption_data.$option\t\t\t= option;\r\n\t\t\t\toption_data.$order\t\t\t= option_data.$order || ++$order;\r\n\r\n\t\t\t\toptionsMap[value] = option_data;\r\n\t\t\t\toptions.push(option_data);\r\n\t\t\t}\r\n\r\n\t\t\tif( option.selected ){\r\n\t\t\t\tsettings_element.items.push(value);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\r\n\t\t\tvar id:string, optgroup_data\r\n\r\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\r\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\r\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\r\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\r\n\t\t\toptgroup_data.$order\t\t\t\t\t= optgroup_data.$order || ++$order;\r\n\r\n\t\t\tsettings_element.optgroups.push(optgroup_data);\r\n\r\n\t\t\tid = optgroup_data[field_optgroup_value];\r\n\r\n\t\t\titerate(optgroup.children, (option)=>{\r\n\t\t\t\taddOption(option as HTMLOptionElement, id);\r\n\t\t\t});\r\n\r\n\t\t};\r\n\r\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\r\n\r\n\t\titerate(input.children,(child)=>{\r\n\t\t\ttagName = child.tagName.toLowerCase();\r\n\t\t\tif (tagName === 'optgroup') {\r\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\r\n\t\t\t} else if (tagName === 'option') {\r\n\t\t\t\taddOption(child as HTMLOptionElement);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Initialize from a <input type=\"text\"> element.\r\n\t *\r\n\t */\r\n\tvar init_textbox = () => {\r\n\t\tconst data_raw = input.getAttribute(attr_data);\r\n\r\n\t\tif (!data_raw) {\r\n\t\t\tvar value = input.value.trim() || '';\r\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\r\n\t\t\tconst values = value.split(settings.delimiter);\r\n\r\n\t\t\titerate( values, (value) => {\r\n\t\t\t\tconst option:TomOption = {};\r\n\t\t\t\toption[field_label] = value;\r\n\t\t\t\toption[field_value] = value;\r\n\t\t\t\tsettings_element.options.push(option);\r\n\t\t\t});\r\n\t\t\tsettings_element.items = values;\r\n\t\t} else {\r\n\t\t\tsettings_element.options = JSON.parse(data_raw);\r\n\t\t\titerate( settings_element.options, (opt) => {\r\n\t\t\t\tsettings_element.items.push(opt[field_value]);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tif (tag_name === 'select') {\r\n\t\tinit_select();\r\n\t} else {\r\n\t\tinit_textbox();\r\n\t}\r\n\r\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\r\n};\r\n","\r\nimport MicroEvent from './contrib/microevent.ts';\r\nimport MicroPlugin from './contrib/microplugin.ts';\r\nimport { Sifter } from '@orchidjs/sifter';\r\nimport { escape_regex } from '@orchidjs/unicode-variants';\r\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index.ts';\r\nimport {highlight, removeHighlight} from './contrib/highlight.ts';\r\nimport * as constants from './constants.ts';\r\nimport getSettings from './getSettings.ts';\r\nimport {\r\n\thash_key,\r\n\tget_hash,\r\n\tescape_html,\r\n\tdebounce_events,\r\n\tgetSelection,\r\n\tpreventDefault,\r\n\taddEvent,\r\n\tloadDebounce,\r\n\ttimeout,\r\n\tisKeyDown,\r\n\tgetId,\r\n\taddSlashes,\r\n\tappend,\r\n\titerate\r\n} from './utils.ts';\r\n\r\nimport {\r\n\tgetDom,\r\n\tisHtmlString,\r\n\tescapeQuery,\r\n\ttriggerEvent,\r\n\tapplyCSS,\r\n\taddClasses,\r\n\tremoveClasses,\r\n\tparentMatch,\r\n\tgetTail,\r\n\tisEmptyObject,\r\n\tnodeIndex,\r\n\tsetAttr,\r\n\treplaceNode\r\n} from './vanilla.ts';\r\n\r\nvar instance_i = 0;\r\n\r\nexport default class TomSelect extends MicroPlugin(MicroEvent){\r\n\r\n\tpublic control_input\t\t\t: HTMLInputElement;\r\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\r\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\r\n\tpublic control\t\t\t\t\t: HTMLElement;\r\n\tpublic dropdown_content\t\t\t: HTMLElement;\r\n\tpublic focus_node\t\t\t\t: HTMLElement;\r\n\r\n\tpublic order\t\t\t\t\t: number = 0;\r\n\tpublic settings\t\t\t\t\t: TomSettings;\r\n\tpublic input\t\t\t\t\t: TomInput;\r\n\tpublic tabIndex\t\t\t\t\t: number;\r\n\tpublic is_select_tag\t\t\t: boolean;\r\n\tpublic rtl\t\t\t\t\t\t: boolean;\r\n\tprivate inputId\t\t\t\t\t: string;\r\n\r\n\tprivate _destroy\t\t\t\t!: () => void;\r\n\tpublic sifter\t\t\t\t\t: Sifter;\r\n\r\n\r\n\tpublic isOpen\t\t\t\t\t: boolean = false;\r\n\tpublic isDisabled\t\t\t\t: boolean = false;\r\n\tpublic isReadOnly\t\t\t\t: boolean = false;\r\n\tpublic isRequired\t\t\t\t: boolean;\r\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\r\n\tpublic isValid\t\t\t\t\t: boolean = true;\r\n\tpublic isLocked\t\t\t\t\t: boolean = false;\r\n\tpublic isFocused\t\t\t\t: boolean = false;\r\n\tpublic isInputHidden\t\t\t: boolean = false;\r\n\tpublic isSetup\t\t\t\t\t: boolean = false;\r\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\r\n\tpublic ignoreHover\t\t\t\t: boolean = false;\r\n\tpublic hasOptions\t\t\t\t: boolean = false;\r\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\r\n\tpublic lastValue\t\t\t\t: string = '';\r\n\tpublic caretPos\t\t\t\t\t: number = 0;\r\n\tpublic loading\t\t\t\t\t: number = 0;\r\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\r\n\r\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\r\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\r\n\r\n\tpublic optgroups\t\t\t\t: TomOptions = {};\r\n\tpublic options\t\t\t\t\t: TomOptions = {};\r\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\r\n\tpublic items\t\t\t\t\t: string[] = [];\r\n\r\n\tprivate refreshTimeout\t\t\t: null|number = null;\r\n\r\n\r\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\r\n\t\tsuper();\r\n\r\n\t\tinstance_i++;\r\n\r\n\t\tvar dir;\r\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\r\n\r\n\t\tif( input.tomselect ){\r\n\t\t\tthrow new Error('Tom Select already initialized on this element');\r\n\t\t}\r\n\r\n\r\n\t\tinput.tomselect\t\t\t= this;\r\n\r\n\r\n\t\t// detect rtl environment\r\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\r\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\r\n\r\n\t\t// setup default state\r\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\r\n\t\tthis.settings\t\t\t= settings;\r\n\t\tthis.input\t\t\t\t= input;\r\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\r\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\r\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\r\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\r\n\t\tthis.isRequired\t\t\t= input.required;\r\n\r\n\r\n\t\t// search system\r\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\r\n\r\n\t\t// option-dependent defaults\r\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\r\n\t\tif (typeof settings.hideSelected !== 'boolean') {\r\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\r\n\t\t}\r\n\r\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\r\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\r\n\t\t}\r\n\r\n\t\t// set up createFilter callback\r\n\t\tvar filter = settings.createFilter;\r\n\t\tif( typeof filter !== 'function' ){\r\n\r\n\t\t\tif( typeof filter === 'string' ){\r\n\t\t\t\tfilter = new RegExp(filter);\r\n\t\t\t}\r\n\r\n\t\t\tif( filter instanceof RegExp ){\r\n\t\t\t\tsettings.createFilter = (input: string) => (filter as RegExp).test(input);\r\n\t\t\t}else{\r\n\t\t\t\tsettings.createFilter = (value: string) => {\r\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis.initializePlugins(settings.plugins);\r\n\t\tthis.setupCallbacks();\r\n\t\tthis.setupTemplates();\r\n\r\n\r\n\t\t// Create all elements\r\n\t\tconst wrapper\t\t\t= getDom('<div>');\r\n\t\tconst control\t\t\t= getDom('<div>');\r\n\t\tconst dropdown\t\t\t= this._render('dropdown');\r\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\r\n\r\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\r\n\t\tconst inputMode\t\t\t= settings.mode;\r\n\r\n\t\tvar control_input: HTMLInputElement;\r\n\r\n\r\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\r\n\r\n\r\n\t\taddClasses(control,settings.controlClass);\r\n\t\tappend( wrapper, control );\r\n\r\n\r\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\r\n\t\tif( settings.copyClassesToDropdown ){\r\n\t\t\taddClasses( dropdown, classes);\r\n\t\t}\r\n\r\n\r\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\r\n\t\tappend( dropdown, dropdown_content );\r\n\r\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\r\n\r\n\r\n\t\t// default controlInput\r\n\t\tif( isHtmlString(settings.controlInput) ){\r\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\r\n\r\n\t\t\t// set attributes\r\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete','spellcheck'];\r\n\t\t\titerate(attrs,(attr:string) => {\r\n\t\t\t\tif( input.getAttribute(attr) ){\r\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcontrol_input.tabIndex = -1;\r\n\t\t\tcontrol.appendChild( control_input );\r\n\t\t\tthis.focus_node\t\t= control_input;\r\n\r\n\t\t// dom element\r\n\t\t}else if( settings.controlInput ){\r\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\r\n\t\t\tthis.focus_node\t\t= control_input;\r\n\r\n\t\t}else{\r\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\r\n\t\t\tthis.focus_node\t\t= control;\r\n\t\t}\r\n\r\n\t\tthis.wrapper\t\t\t= wrapper;\r\n\t\tthis.dropdown\t\t\t= dropdown;\r\n\t\tthis.dropdown_content\t= dropdown_content;\r\n\t\tthis.control \t\t\t= control;\r\n\t\tthis.control_input\t\t= control_input;\r\n\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/**\r\n\t * set up event bindings.\r\n\t *\r\n\t */\r\n\tsetup(){\r\n\r\n\t\tconst self = this;\r\n\t\tconst settings\t\t\t\t= self.settings;\r\n\t\tconst control_input\t\t\t= self.control_input;\r\n\t\tconst dropdown\t\t\t\t= self.dropdown;\r\n\t\tconst dropdown_content\t\t= self.dropdown_content;\r\n\t\tconst wrapper\t\t\t\t= self.wrapper;\r\n\t\tconst control\t\t\t\t= self.control;\r\n\t\tconst input\t\t\t\t\t= self.input;\r\n\t\tconst focus_node\t\t\t= self.focus_node;\r\n\t\tconst passive_event\t\t\t= { passive: true };\r\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\r\n\r\n\r\n\t\tsetAttr(dropdown_content,{\r\n\t\t\tid: listboxId\r\n\t\t});\r\n\r\n\t\tsetAttr(focus_node,{\r\n\t\t\trole:'combobox',\r\n\t\t\t'aria-haspopup':'listbox',\r\n\t\t\t'aria-expanded':'false',\r\n\t\t\t'aria-controls':listboxId\r\n\t\t});\r\n\r\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\r\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\r\n\t\tconst label\t\t\t= document.querySelector(query);\r\n\t\tconst label_click\t= self.focus.bind(self);\r\n\t\tif( label ){\r\n\t\t\taddEvent(label,'click', label_click );\r\n\t\t\tsetAttr(label,{for:control_id});\r\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\r\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\r\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\r\n\t\t}\r\n\r\n\t\twrapper.style.width = input.style.width;\r\n\r\n\t\tif (self.plugins.names.length) {\r\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\r\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\r\n\t\t}\r\n\r\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\r\n\t\t\tsetAttr(input,{multiple:'multiple'});\r\n\t\t}\r\n\r\n\t\tif (settings.placeholder) {\r\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\r\n\t\t}\r\n\r\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\r\n\t\tif (!settings.splitOn && settings.delimiter) {\r\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\r\n\t\t}\r\n\r\n\t\t// debounce user defined load() if loadThrottle > 0\r\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\r\n\t\tif( settings.load && settings.loadThrottle ){\r\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\r\n\t\t}\r\n\r\n\t\taddEvent(dropdown,'mousemove', () => {\r\n\t\t\tself.ignoreHover = false;\r\n\t\t});\r\n\r\n\t\taddEvent(dropdown,'mouseenter', (e) => {\r\n\r\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\r\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\r\n\r\n\t\t}, {capture:true});\r\n\r\n\t\t// clicking on an option should select it\r\n\t\taddEvent(dropdown,'click',(evt) => {\r\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\r\n\t\t\tif( option ){\r\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\r\n\t\t\t\tpreventDefault(evt,true);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\taddEvent(control,'click', (evt) => {\r\n\r\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\r\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\r\n\t\t\t\tpreventDefault(evt,true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// retain focus (see control_input mousedown)\r\n\t\t\tif( control_input.value != '' ){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tself.onClick();\r\n\t\t\tpreventDefault(evt,true);\r\n\t\t});\r\n\r\n\r\n\t\t// keydown on focus_node for arrow_down/arrow_up\r\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\r\n\r\n\t\t// keypress and input/keyup\r\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\r\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\r\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\r\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\r\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\r\n\r\n\r\n\t\tconst doc_mousedown = (evt:Event) => {\r\n\r\n\t\t\t// blur if target is outside of this instance\r\n\t\t\t// dropdown is not always inside wrapper\r\n\t\t\tconst target = evt.composedPath()[0];\r\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\r\n\t\t\t\tif (self.isFocused) {\r\n\t\t\t\t\tself.blur();\r\n\t\t\t\t}\r\n\t\t\t\tself.inputState();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// retain focus by preventing native handling. if the\r\n\t\t\t// event target is the input it should not be modified.\r\n\t\t\t// otherwise, text selection within the input won't work.\r\n\t\t\t// Fixes bug #212 which is no covered by tests\r\n\t\t\tif( target == control_input && self.isOpen ){\r\n\t\t\t\tevt.stopPropagation();\r\n\r\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\r\n\t\t\t}else{\r\n\t\t\t\tpreventDefault(evt,true);\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tconst win_scroll = () => {\r\n\t\t\tif (self.isOpen) {\r\n\t\t\t\tself.positionDropdown();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\taddEvent(document,'mousedown', doc_mousedown);\r\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\r\n\t\taddEvent(window,'resize', win_scroll, passive_event);\r\n\r\n\t\tthis._destroy = () => {\r\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\r\n\t\t\twindow.removeEventListener('scroll',win_scroll);\r\n\t\t\twindow.removeEventListener('resize',win_scroll);\r\n\t\t\tif( label ) label.removeEventListener('click',label_click);\r\n\t\t};\r\n\r\n\t\t// store original html and tab index so that they can be\r\n\t\t// restored when the destroy() method is called.\r\n\t\tthis.revertSettings = {\r\n\t\t\tinnerHTML : input.innerHTML,\r\n\t\t\ttabIndex : input.tabIndex\r\n\t\t};\r\n\r\n\r\n\t\tinput.tabIndex = -1;\r\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\r\n\r\n\t\tself.sync(false);\r\n\t\tsettings.items = [];\r\n\t\tdelete settings.optgroups;\r\n\t\tdelete settings.options;\r\n\r\n\t\taddEvent(input,'invalid', () => {\r\n\t\t\tif( self.isValid ){\r\n\t\t\t\tself.isValid = false;\r\n\t\t\t\tself.isInvalid = true;\r\n\t\t\t\tself.refreshState();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tself.updateOriginalInput();\r\n\t\tself.refreshItems();\r\n\t\tself.close(false);\r\n\t\tself.inputState();\r\n\t\tself.isSetup = true;\r\n\r\n\t\tif( input.disabled ){\r\n\t\t\tself.disable();\r\n\t\t}else if( input.readOnly ){\r\n\t\t\tself.setReadOnly(true);\r\n\t\t}else{\r\n\t\t\tself.enable(); //sets tabIndex\r\n\t\t}\r\n\r\n\t\tself.on('change', this.onChange);\r\n\r\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\r\n\t\tself.trigger('initialize');\r\n\r\n\t\t// preload options\r\n\t\tif (settings.preload === true) {\r\n\t\t\tself.preload();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Register options and optgroups\r\n\t *\r\n\t */\r\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\r\n\r\n\t\t// build options table\r\n\t\tthis.addOptions(options);\r\n\r\n\r\n\t\t// build optgroup table\r\n\t\titerate( optgroups, (optgroup:TomOption) => {\r\n\t\t\tthis.registerOptionGroup(optgroup);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up default rendering functions.\r\n\t */\r\n\tsetupTemplates() {\r\n\t\tvar self = this;\r\n\t\tvar field_label = self.settings.labelField;\r\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\r\n\r\n\t\tvar templates = {\r\n\t\t\t'optgroup': (data:TomOption) => {\r\n\t\t\t\tlet optgroup = document.createElement('div');\r\n\t\t\t\toptgroup.className = 'optgroup';\r\n\t\t\t\toptgroup.appendChild(data.options);\r\n\t\t\t\treturn optgroup;\r\n\r\n\t\t\t},\r\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\r\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\r\n\t\t\t},\r\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\r\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\r\n\t\t\t},\r\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\r\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\r\n\t\t\t},\r\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\r\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\r\n\t\t\t},\r\n\t\t\t'no_results':() => {\r\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\r\n\t\t\t},\r\n\t\t\t'loading':() => {\r\n\t\t\t\treturn '<div class=\"spinner\"></div>';\r\n\t\t\t},\r\n\t\t\t'not_loading':() => {},\r\n\t\t\t'dropdown':() => {\r\n\t\t\t\treturn '<div></div>';\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\r\n\t}\r\n\r\n\t/**\r\n\t * Maps fired events to callbacks provided\r\n\t * in the settings used when creating the control.\r\n\t */\r\n\tsetupCallbacks() {\r\n\t\tvar key, fn;\r\n\t\tvar callbacks:{[key:string]:string} = {\r\n\t\t\t'initialize'      : 'onInitialize',\r\n\t\t\t'change'          : 'onChange',\r\n\t\t\t'item_add'        : 'onItemAdd',\r\n\t\t\t'item_remove'     : 'onItemRemove',\r\n\t\t\t'item_select'     : 'onItemSelect',\r\n\t\t\t'clear'           : 'onClear',\r\n\t\t\t'option_add'      : 'onOptionAdd',\r\n\t\t\t'option_remove'   : 'onOptionRemove',\r\n\t\t\t'option_clear'    : 'onOptionClear',\r\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\r\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\r\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\r\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\r\n\t\t\t'dropdown_close'  : 'onDropdownClose',\r\n\t\t\t'type'            : 'onType',\r\n\t\t\t'load'            : 'onLoad',\r\n\t\t\t'focus'           : 'onFocus',\r\n\t\t\t'blur'            : 'onBlur'\r\n\t\t};\r\n\r\n\t\tfor (key in callbacks) {\r\n\r\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\r\n\t\t\tif (fn) this.on(key, fn);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sync the Tom Select instance with the original input or select\r\n\t *\r\n\t */\r\n\tsync(get_settings:boolean=true):void{\r\n\t\tconst self\t\t= this;\r\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\r\n\r\n\t\tself.setupOptions(settings.options,settings.optgroups);\r\n\r\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\r\n\r\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered when the main control element\r\n\t * has a click event.\r\n\t *\r\n\t */\r\n\tonClick():void {\r\n\t\tvar self = this;\r\n\r\n\t\tif( self.activeItems.length > 0 ){\r\n\t\t\tself.clearActiveItems();\r\n\t\t\tself.focus();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif( self.isFocused && self.isOpen ){\r\n\t\t\tself.blur();\r\n\t\t} else {\r\n\t\t\tself.focus();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated v1.7\r\n\t *\r\n\t */\r\n\tonMouseDown():void {}\r\n\r\n\t/**\r\n\t * Triggered when the value of the control has been changed.\r\n\t * This should propagate the event to the original DOM\r\n\t * input / select element.\r\n\t */\r\n\tonChange() {\r\n\t\ttriggerEvent(this.input, 'input');\r\n\t\ttriggerEvent(this.input, 'change');\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered on <input> paste.\r\n\t *\r\n\t */\r\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\r\n\t\tvar self = this;\r\n\r\n\t\tif( self.isInputHidden || self.isLocked ){\r\n\t\t\tpreventDefault(e);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If a regex or string is included, this will split the pasted\r\n\t\t// input and create Items for each separate value\r\n\t\tif( !self.settings.splitOn ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Wait for pasted text to be recognized in value\r\n\t\tsetTimeout(() => {\r\n\t\t\tvar pastedText = self.inputValue();\r\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\r\n\t\t\titerate( splitInput, (piece:string) => {\r\n\r\n\t\t\t\tconst hash = hash_key(piece);\r\n\t\t\t\tif( hash ){\r\n\t\t\t\t\tif( this.options[piece] ){\r\n\t\t\t\t\t\tself.addItem(piece);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tself.createItem(piece);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, 0);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered on <input> keypress.\r\n\t *\r\n\t */\r\n\tonKeyPress(e:KeyboardEvent):void {\r\n\t\tvar self = this;\r\n\t\tif(self.isLocked){\r\n\t\t\tpreventDefault(e);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\r\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\r\n\t\t\tself.createItem();\r\n\t\t\tpreventDefault(e);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered on <input> keydown.\r\n\t *\r\n\t */\r\n\tonKeyDown(e:KeyboardEvent):void {\r\n\t\tvar self = this;\r\n\r\n\t\tself.ignoreHover = true;\r\n\r\n\t\tif (self.isLocked) {\r\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\r\n\t\t\t\tpreventDefault(e);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch (e.keyCode) {\r\n\r\n\t\t\t// ctrl+A: select all\r\n\t\t\tcase constants.KEY_A:\r\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\r\n\t\t\t\t\tif( self.control_input.value == '' ){\r\n\t\t\t\t\t\tpreventDefault(e);\r\n\t\t\t\t\t\tself.selectAll();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// esc: close dropdown\r\n\t\t\tcase constants.KEY_ESC:\r\n\t\t\t\tif (self.isOpen) {\r\n\t\t\t\t\tpreventDefault(e,true);\r\n\t\t\t\t\tself.close();\r\n\t\t\t\t}\r\n\t\t\t\tself.clearActiveItems();\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// down: open dropdown or move selection down\r\n\t\t\tcase constants.KEY_DOWN:\r\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\r\n\t\t\t\t\tself.open();\r\n\t\t\t\t} else if (self.activeOption) {\r\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\r\n\t\t\t\t\tif (next) self.setActiveOption(next);\r\n\t\t\t\t}\r\n\t\t\t\tpreventDefault(e);\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// up: move selection up\r\n\t\t\tcase constants.KEY_UP:\r\n\t\t\t\tif (self.activeOption) {\r\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\r\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\r\n\t\t\t\t}\r\n\t\t\t\tpreventDefault(e);\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// return: select active option\r\n\t\t\tcase constants.KEY_RETURN:\r\n\t\t\t\tif( self.canSelect(self.activeOption) ){\r\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\r\n\t\t\t\t\tpreventDefault(e);\r\n\r\n\t\t\t\t// if the option_create=null, the dropdown might be closed\r\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\r\n\t\t\t\t\tpreventDefault(e);\r\n\r\n\t\t\t\t// don't submit form when searching for a value\r\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\r\n\t\t\t\t\tpreventDefault(e);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// left: modifiy item selection to the left\r\n\t\t\tcase constants.KEY_LEFT:\r\n\t\t\t\tself.advanceSelection(-1, e);\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// right: modifiy item selection to the right\r\n\t\t\tcase constants.KEY_RIGHT:\r\n\t\t\t\tself.advanceSelection(1, e);\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// tab: select active option and/or create item\r\n\t\t\tcase constants.KEY_TAB:\r\n\r\n\t\t\t\tif( self.settings.selectOnTab ){\r\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\r\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\r\n\r\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\r\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\r\n\t\t\t\t\t\tpreventDefault(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\r\n\t\t\t\t\t\tpreventDefault(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// delete|backspace: delete items\r\n\t\t\tcase constants.KEY_BACKSPACE:\r\n\t\t\tcase constants.KEY_DELETE:\r\n\t\t\t\tself.deleteSelection(e);\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// don't enter text in the control_input when active items are selected\r\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\r\n\t\t\tpreventDefault(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered on <input> keyup.\r\n\t *\r\n\t */\r\n\tonInput(e:MouseEvent|KeyboardEvent):void {\r\n\t\t\r\n\t\tif( this.isLocked ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst value = this.inputValue();\r\n\t\tif( this.lastValue === value ) return;\r\n\t\tthis.lastValue = value;\r\n\t\t\r\n\t\tif( value == '' ){\r\n\t\t\tthis._onInput();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif( this.refreshTimeout ){\r\n\t\t\twindow.clearTimeout(this.refreshTimeout);\r\n\t\t}\r\n\r\n\t\tthis.refreshTimeout = timeout(()=> {\r\n\t\t\tthis.refreshTimeout = null;\r\n\t\t\tthis._onInput();\r\n\t\t}, this.settings.refreshThrottle);\r\n\t}\r\n\r\n\t_onInput():void {\r\n\t\tconst value = this.lastValue;\r\n\r\n\t\tif( this.settings.shouldLoad.call(this,value) ){\r\n\t\t\tthis.load(value);\r\n\t\t}\r\n\r\n\t\tthis.refreshOptions();\r\n\t\tthis.trigger('type', value);\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered when the user rolls over\r\n\t * an option in the autocomplete dropdown menu.\r\n\t *\r\n\t */\r\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\r\n\t\tif( this.ignoreHover ) return;\r\n\t\tthis.setActiveOption(option, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered on <input> focus.\r\n\t *\r\n\t */\r\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\r\n\t\tvar self = this;\r\n\t\tvar wasFocused = self.isFocused;\r\n\r\n\t\tif( self.isDisabled || self.isReadOnly ){\r\n\t\t\tself.blur();\r\n\t\t\tpreventDefault(e);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (self.ignoreFocus) return;\r\n\t\tself.isFocused = true;\r\n\t\tif( self.settings.preload === 'focus' ) self.preload();\r\n\r\n\t\tif (!wasFocused) self.trigger('focus');\r\n\r\n\t\tif (!self.activeItems.length) {\r\n\t\t\tself.inputState();\r\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\r\n\t\t}\r\n\r\n\t\tself.refreshState();\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered on <input> blur.\r\n\t *\r\n\t */\r\n\tonBlur(e?:FocusEvent):void {\r\n\r\n\t\tif( document.hasFocus() === false ) return;\r\n\r\n\t\tvar self = this;\r\n\t\tif (!self.isFocused) return;\r\n\t\tself.isFocused = false;\r\n\t\tself.ignoreFocus = false;\r\n\r\n\t\tvar deactivate = () => {\r\n\t\t\tself.close();\r\n\t\t\tself.setActiveItem();\r\n\t\t\tself.setCaret(self.items.length);\r\n\t\t\tself.trigger('blur');\r\n\t\t};\r\n\r\n\t\tif (self.settings.create && self.settings.createOnBlur) {\r\n\t\t\tself.createItem(null, deactivate);\r\n\t\t} else {\r\n\t\t\tdeactivate();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Triggered when the user clicks on an option\r\n\t * in the autocomplete dropdown menu.\r\n\t *\r\n\t */\r\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\r\n\t\tvar value, self = this;\r\n\r\n\r\n\t\t// should not be possible to trigger a option under a disabled optgroup\r\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tif( option.classList.contains('create') ){\r\n\t\t\tself.createItem(null, () => {\r\n\t\t\t\tif (self.settings.closeAfterSelect) {\r\n\t\t\t\t\tself.close();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tvalue = option.dataset.value;\r\n\t\t\tif (typeof value !== 'undefined') {\r\n\t\t\t\tself.lastQuery = null;\r\n\t\t\t\tself.addItem(value);\r\n\t\t\t\tif (self.settings.closeAfterSelect) {\r\n\t\t\t\t\tself.close();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\r\n\t\t\t\t\tself.setActiveOption(option);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if the given option can be selected\r\n\t *\r\n\t */\r\n\tcanSelect(option:HTMLElement|null):boolean{\r\n\r\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Triggered when the user clicks on an item\r\n\t * that has been selected.\r\n\t *\r\n\t */\r\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\r\n\t\tvar self = this;\r\n\r\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\r\n\t\t\tpreventDefault(evt);\r\n\t\t\tself.setActiveItem(item, evt);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not to invoke\r\n\t * the user-provided option provider / loader\r\n\t *\r\n\t * Note, there is a subtle difference between\r\n\t * this.canLoad() and this.settings.shouldLoad();\r\n\t *\r\n\t *\t- settings.shouldLoad() is a user-input validator.\r\n\t *\tWhen false is returned, the not_loading template\r\n\t *\twill be added to the dropdown\r\n\t *\r\n\t *\t- canLoad() is lower level validator that checks\r\n\t * \tthe Tom Select instance. There is no inherent user\r\n\t *\tfeedback when canLoad returns false\r\n\t *\r\n\t */\r\n\tcanLoad(value:string):boolean{\r\n\r\n\t\tif( !this.settings.load ) return false;\r\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invokes the user-provided option provider / loader.\r\n\t *\r\n\t */\r\n\tload(value:string):void {\r\n\t\tconst self = this;\r\n\r\n\t\tif( !self.canLoad(value) ) return;\r\n\r\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\r\n\t\tself.loading++;\r\n\r\n\t\tconst callback = self.loadCallback.bind(self);\r\n\t\tself.settings.load.call(self, value, callback);\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked by the user-provided option provider\r\n\t *\r\n\t */\r\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\r\n\t\tconst self = this;\r\n\t\tself.loading = Math.max(self.loading - 1, 0);\r\n\t\tself.lastQuery = null;\r\n\r\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\r\n\t\tself.setupOptions(options,optgroups);\r\n\r\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\r\n\r\n\t\tif (!self.loading) {\r\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\r\n\t\t}\r\n\r\n\t\tself.trigger('load', options, optgroups);\r\n\t}\r\n\r\n\tpreload():void{\r\n\t\tvar classList = this.wrapper.classList;\r\n\t\tif( classList.contains('preloaded') ) return;\r\n\t\tclassList.add('preloaded');\r\n\t\tthis.load('');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets the input field of the control to the specified value.\r\n\t *\r\n\t */\r\n\tsetTextboxValue(value:string = '') {\r\n\t\tvar input = this.control_input;\r\n\t\tvar changed = input.value !== value;\r\n\t\tif (changed) {\r\n\t\t\tinput.value = value;\r\n\t\t\ttriggerEvent(input,'update');\r\n\t\t\tthis.lastValue = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the value of the control. If multiple items\r\n\t * can be selected (e.g. <select multiple>), this returns\r\n\t * an array. If only one item can be selected, this\r\n\t * returns a string.\r\n\t *\r\n\t */\r\n\tgetValue():string|string[] {\r\n\r\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\r\n\t\t\treturn this.items;\r\n\t\t}\r\n\r\n\t\treturn this.items.join(this.settings.delimiter);\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the selected items to the given value.\r\n\t *\r\n\t */\r\n\tsetValue( value:string|string[], silent?:boolean ):void{\r\n\t\tvar events = silent ? [] : ['change'];\r\n\r\n\t\tdebounce_events(this, events,() => {\r\n\t\t\tthis.clear(silent);\r\n\t\t\tthis.addItems(value, silent);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Resets the number of max items to the given value\r\n\t *\r\n\t */\r\n\tsetMaxItems(value:null|number){\r\n\t\tif(value === 0) value = null; //reset to unlimited items.\r\n\t\tthis.settings.maxItems = value;\r\n\t\tthis.refreshState();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the selected item.\r\n\t *\r\n\t */\r\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\r\n\t\tvar self = this;\r\n\t\tvar eventName;\r\n\t\tvar i, begin, end, swap;\r\n\t\tvar last;\r\n\r\n\t\tif (self.settings.mode === 'single') return;\r\n\r\n\t\t// clear the active selection\r\n\t\tif( !item ){\r\n\t\t\tself.clearActiveItems();\r\n\t\t\tif (self.isFocused) {\r\n\t\t\t\tself.inputState();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// modify selection\r\n\t\teventName = e && e.type.toLowerCase();\r\n\r\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\r\n\t\t\tlast\t= self.getLastActive();\r\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\r\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\r\n\r\n\t\t\tif (begin > end) {\r\n\t\t\t\tswap  = begin;\r\n\t\t\t\tbegin = end;\r\n\t\t\t\tend   = swap;\r\n\t\t\t}\r\n\t\t\tfor (i = begin; i <= end; i++) {\r\n\t\t\t\titem = self.control.children[i] as TomItem;\r\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\r\n\t\t\t\t\tself.setActiveItemClass(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpreventDefault(e);\r\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\r\n\t\t\tif( item.classList.contains('active') ){\r\n\t\t\t\tself.removeActiveItem( item );\r\n\t\t\t} else {\r\n\t\t\t\tself.setActiveItemClass(item);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tself.clearActiveItems();\r\n\t\t\tself.setActiveItemClass(item);\r\n\t\t}\r\n\r\n\t\t// ensure control has focus\r\n\t\tself.inputState();\r\n\t\tif (!self.isFocused) {\r\n\t\t\tself.focus();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set the active and last-active classes\r\n\t *\r\n\t */\r\n\tsetActiveItemClass( item:TomItem ){\r\n\t\tconst self = this;\r\n\t\tconst last_active = self.control.querySelector('.last-active');\r\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\r\n\r\n\t\taddClasses(item,'active last-active');\r\n\t\tself.trigger('item_select', item);\r\n\t\tif( self.activeItems.indexOf(item) == -1 ){\r\n\t\t\tself.activeItems.push( item );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Remove active item\r\n\t *\r\n\t */\r\n\tremoveActiveItem( item:TomItem ){\r\n\t\tvar idx = this.activeItems.indexOf(item);\r\n\t\tthis.activeItems.splice(idx, 1);\r\n\t\tremoveClasses(item,'active');\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all the active items\r\n\t *\r\n\t */\r\n\tclearActiveItems(){\r\n\t\tremoveClasses(this.activeItems,'active');\r\n\t\tthis.activeItems = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the selected item in the dropdown menu\r\n\t * of available options.\r\n\t *\r\n\t */\r\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\r\n\r\n\t\tif( option === this.activeOption ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.clearActiveOption();\r\n\t\tif( !option ) return;\r\n\r\n\t\tthis.activeOption = option;\r\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\r\n\t\tsetAttr(option,{'aria-selected':'true'});\r\n\t\taddClasses(option,'active');\r\n\t\tif( scroll ) this.scrollToOption(option);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the dropdown_content scrollTop to display the option\r\n\t *\r\n\t */\r\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\r\n\r\n\t\tif( !option ) return;\r\n\r\n\t\tconst content\t\t= this.dropdown_content;\r\n\t\tconst height_menu\t= content.clientHeight;\r\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\r\n\t\tconst height_item\t= option.offsetHeight;\r\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\r\n\r\n\t\tif (y + height_item > height_menu + scrollTop) {\r\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\r\n\r\n\t\t} else if (y < scrollTop) {\r\n\t\t\tthis.scroll(y, behavior);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scroll the dropdown to the given position\r\n\t *\r\n\t */\r\n\tscroll( scrollTop:number, behavior?:string ):void{\r\n\t\tconst content = this.dropdown_content;\r\n\t\tif( behavior ){\r\n\t\t\tcontent.style.scrollBehavior = behavior;\r\n\t\t}\r\n\t\tcontent.scrollTop = scrollTop;\r\n\t\tcontent.style.scrollBehavior = '';\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the active option\r\n\t *\r\n\t */\r\n\tclearActiveOption(){\r\n\t\tif( this.activeOption ){\r\n\t\t\tremoveClasses(this.activeOption,'active');\r\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\r\n\t\t}\r\n\t\tthis.activeOption = null;\r\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Selects all items (CTRL + A).\r\n\t */\r\n\tselectAll() {\r\n\t\tconst self = this;\r\n\r\n\t\tif (self.settings.mode === 'single') return;\r\n\r\n\t\tconst activeItems = self.controlChildren();\r\n\r\n\t\tif( !activeItems.length ) return;\r\n\r\n\t\tself.inputState();\r\n\t\tself.close();\r\n\r\n\t\tself.activeItems = activeItems;\r\n\t\titerate( activeItems, (item:TomItem) => {\r\n\t\t\tself.setActiveItemClass(item);\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if the control_input should be in a hidden or visible state\r\n\t *\r\n\t */\r\n\tinputState(){\r\n\t\tvar self = this;\r\n\r\n\t\tif( !self.control.contains(self.control_input) ) return;\r\n\r\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\r\n\r\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\r\n\t\t\tself.setTextboxValue();\r\n\t\t\tself.isInputHidden = true;\r\n\r\n\t\t}else{\r\n\r\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\r\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\r\n\t\t\t}\r\n\t\t\tself.isInputHidden = false;\r\n\t\t}\r\n\r\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\r\n\t}\r\n\r\n\t/**\r\n\t * Get the input value\r\n\t */\r\n\tinputValue(){\r\n\t\treturn this.control_input.value.trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Gives the control focus.\r\n\t */\r\n\tfocus() {\r\n\t\tvar self = this;\r\n\t\tif( self.isDisabled || self.isReadOnly) return;\r\n\r\n\t\tself.ignoreFocus = true;\r\n\r\n\t\tif( self.control_input.offsetWidth ){\r\n\t\t\tself.control_input.focus();\r\n\t\t}else{\r\n\t\t\tself.focus_node.focus();\r\n\t\t}\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tself.ignoreFocus = false;\r\n\t\t\tself.onFocus();\r\n\t\t}, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Forces the control out of focus.\r\n\t *\r\n\t */\r\n\tblur():void {\r\n\t\tthis.focus_node.blur();\r\n\t\tthis.onBlur();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a function that scores an object\r\n\t * to show how good of a match it is to the\r\n\t * provided query.\r\n\t *\r\n\t * @return {function}\r\n\t */\r\n\tgetScoreFunction(query:string) {\r\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\r\n\t}\r\n\r\n\t/**\r\n\t * Returns search options for sifter (the system\r\n\t * for scoring and sorting results).\r\n\t *\r\n\t * @see https://github.com/orchidjs/sifter.js\r\n\t * @return {object}\r\n\t */\r\n\tgetSearchOptions() {\r\n\t\tvar settings = this.settings;\r\n\t\tvar sort = settings.sortField;\r\n\t\tif (typeof settings.sortField === 'string') {\r\n\t\t\tsort = [{field: settings.sortField}];\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tfields      : settings.searchField,\r\n\t\t\tconjunction : settings.searchConjunction,\r\n\t\t\tsort        : sort,\r\n\t\t\tnesting     : settings.nesting\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Searches through available options and returns\r\n\t * a sorted array of matches.\r\n\t *\r\n\t */\r\n\tsearch(query:string) : ReturnType<Sifter['search']>{\r\n\t\tvar result, calculateScore;\r\n\t\tvar self     = this;\r\n\t\tvar options  = this.getSearchOptions();\r\n\r\n\t\t// validate user-provided result scoring function\r\n\t\tif ( self.settings.score ){\r\n\t\t\tcalculateScore = self.settings.score.call(self,query);\r\n\t\t\tif (typeof calculateScore !== 'function') {\r\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// perform search\r\n\t\tif (query !== self.lastQuery) {\r\n\t\t\tself.lastQuery\t\t\t= query;\r\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\r\n\t\t\tself.currentResults\t\t= result;\r\n\t\t} else {\r\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\r\n\t\t}\r\n\r\n\t\t// filter out selected items\r\n\t\tif( self.settings.hideSelected ){\r\n\t\t\tresult.items = result.items.filter((item) => {\r\n\t\t\t\tlet hashed = hash_key(item.id);\r\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the list of available options shown\r\n\t * in the autocomplete dropdown menu.\r\n\t *\r\n\t */\r\n\trefreshOptions( triggerDropdown:boolean = true ){\r\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\r\n\t\tvar create;\r\n\r\n\t\ttype Group = {fragment:DocumentFragment,order:number,optgroup:string}\r\n\t\tconst groups: {[key:string]:number} = {};\r\n\t\tconst groups_order:Group[]\t= [];\r\n\r\n\t\tvar self\t\t\t\t\t= this;\r\n\t\tvar query\t\t\t\t\t= self.inputValue();\r\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\r\n\t\tvar results\t\t\t\t\t= self.search(query);\r\n\t\tvar active_option:HTMLElement|null = null;\r\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\r\n\t\tvar dropdown_content\t\t= self.dropdown_content;\r\n\r\n\r\n\t\tif( same_query ){\r\n\t\t\tactive_option\t\t\t= self.activeOption;\r\n\r\n\t\t\tif( active_option ){\r\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// build markup\r\n\t\tn = results.items.length;\r\n\t\tif (typeof self.settings.maxOptions === 'number') {\r\n\t\t\tn = Math.min(n, self.settings.maxOptions);\r\n\t\t}\r\n\r\n\t\tif( n > 0 ){\r\n\t\t\tshow_dropdown = true;\r\n\t\t}\r\n\r\n\t\t// get fragment for group and the position of the group in group_order\r\n\t\tconst getGroupFragment = (optgroup:string,order:number):[number,DocumentFragment] => {\r\n\r\n\t\t\tlet group_order_i = groups[optgroup];\r\n\r\n\t\t\tif( group_order_i !== undefined ){\r\n\t\t\t\tlet order_group = groups_order[group_order_i];\r\n\t\t\t\tif( order_group !== undefined ){\r\n\t\t\t\t\treturn [group_order_i,order_group.fragment];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet group_fragment = document.createDocumentFragment();\r\n\t\t\tgroup_order_i = groups_order.length;\r\n\t\t\tgroups_order.push({fragment:group_fragment,order,optgroup});\r\n\r\n\t\t\treturn [group_order_i,group_fragment]\r\n\t\t}\r\n\r\n\t\t// render and group available options individually\r\n\t\tfor (i = 0; i < n; i++) {\r\n\r\n\t\t\t// get option dom element\r\n\t\t\tlet item\t\t\t= results.items[i];\r\n\t\t\tif( !item ) continue;\r\n\r\n\t\t\tlet opt_value\t\t= item.id;\r\n\t\t\tlet option\t\t\t= self.options[opt_value];\r\n\r\n\t\t\tif( option === undefined ) continue;\r\n\r\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\r\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\r\n\r\n\t\t\t// toggle 'selected' class\r\n\t\t\tif( !self.settings.hideSelected ){\r\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\r\n\t\t\t}\r\n\r\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\r\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\r\n\t\t\t\r\n\r\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\r\n\t\t\t\toptgroup = optgroups[j];\r\n\r\n\t\t\t\tlet order = option.$order;\r\n\t\t\t\tlet self_optgroup = self.optgroups[optgroup];\r\n\t\t\t\tif( self_optgroup === undefined ){\t\t\t\t\t\r\n\t\t\t\t\toptgroup = '';\r\n\t\t\t\t}else{\r\n\t\t\t\t\torder = self_optgroup.$order;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst [group_order_i,group_fragment] = getGroupFragment(optgroup,order);\r\n\r\n\r\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\r\n\t\t\t\tif( j > 0 ){\r\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\r\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\r\n\t\t\t\t\toption_el.classList.add('ts-cloned');\r\n\t\t\t\t\tremoveClasses(option_el,'active');\r\n\r\n\r\n\t\t\t\t\t// make sure we keep the activeOption in the same group\r\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\r\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\r\n\t\t\t\t\t\t\tactive_option = option_el;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t\t\r\n\t\t\t\tgroup_fragment.appendChild(option_el);\r\n\t\t\t\tif( optgroup != '' ){\r\n\t\t\t\t\tgroups[optgroup] = group_order_i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// sort optgroups\r\n\t\tif( self.settings.lockOptgroupOrder ){\r\n\t\t\tgroups_order.sort((a, b) => {\r\n\t\t\t\treturn a.order - b.order;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// render optgroup headers & join groups\r\n\t\thtml = document.createDocumentFragment();\r\n\t\titerate( groups_order, (group_order:Group) => {\r\n\r\n\t\t\tlet group_fragment = group_order.fragment;\r\n\t\t\tlet optgroup = group_order.optgroup\r\n\r\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\r\n\r\n\t\t\tlet group_heading = self.optgroups[optgroup];\r\n\r\n\t\t\tif( group_heading !== undefined ){\r\n\r\n\t\t\t\tlet group_options = document.createDocumentFragment();\r\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\r\n\t\t\t\tappend( group_options, header );\r\n\t\t\t\tappend( group_options, group_fragment );\r\n\r\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\r\n\r\n\t\t\t\tappend( html, group_html );\r\n\r\n\t\t\t} else {\r\n\t\t\t\tappend( html, group_fragment );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdropdown_content.innerHTML = '';\r\n\t\tappend( dropdown_content, html );\r\n\r\n\t\t// highlight matching terms inline\r\n\t\tif (self.settings.highlight) {\r\n\t\t\tremoveHighlight( dropdown_content );\r\n\t\t\tif (results.query.length && results.tokens.length) {\r\n\t\t\t\titerate( results.tokens, (tok) => {\r\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// helper method for adding templates to dropdown\r\n\t\tvar add_template = (template:TomTemplateNames) => {\r\n\t\t\tlet content = self.render(template,{input:query});\r\n\t\t\tif( content ){\r\n\t\t\t\tshow_dropdown = true;\r\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\r\n\t\t\t}\r\n\t\t\treturn content;\r\n\t\t};\r\n\r\n\r\n\t\t// add loading message\r\n\t\tif( self.loading ){\r\n\t\t\tadd_template('loading');\r\n\r\n\t\t// invalid query\r\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\r\n\t\t\tadd_template('not_loading');\r\n\r\n\t\t// add no_results message\r\n\t\t}else if( results.items.length === 0 ){\r\n\t\t\tadd_template('no_results');\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\t// add create option\r\n\t\thas_create_option = self.canCreate(query);\r\n\t\tif (has_create_option) {\r\n\t\t\tcreate = add_template('option_create');\r\n\t\t}\r\n\r\n\r\n\t\t// activate\r\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\r\n\t\tif( show_dropdown ){\r\n\r\n\t\t\tif (results.items.length > 0) {\r\n\r\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\r\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\r\n\r\n\t\t\t\t\tlet active_index = 0;\r\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\r\n\t\t\t\t\t\tactive_index = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else if( create ){\r\n\t\t\t\tactive_option = create;\r\n\t\t\t}\r\n\r\n\t\t\tif( triggerDropdown && !self.isOpen ){\r\n\t\t\t\tself.open();\r\n\t\t\t\tself.scrollToOption(active_option,'auto');\r\n\t\t\t}\r\n\t\t\tself.setActiveOption(active_option);\r\n\r\n\t\t}else{\r\n\t\t\tself.clearActiveOption();\r\n\t\t\tif( triggerDropdown && self.isOpen ){\r\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of selectable options\r\n\t *\r\n\t */\r\n\tselectable():NodeList{\r\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Adds an available option. If it already exists,\r\n\t * nothing will happen. Note: this does not refresh\r\n\t * the options list dropdown (use `refreshOptions`\r\n\t * for that).\r\n\t *\r\n\t * Usage:\r\n\t *\r\n\t *   this.addOption(data)\r\n\t *\r\n\t */\r\n\taddOption( data:TomOption, user_created = false ):false|string {\r\n\t\tconst self = this;\r\n\r\n\t\t// @deprecated 1.7.7\r\n\t\t// use addOptions( array, user_created ) for adding multiple options\r\n\t\tif( Array.isArray(data) ){\r\n\t\t\tself.addOptions( data, user_created);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst key = hash_key(data[self.settings.valueField]);\r\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\r\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\r\n\t\tself.options[key]\t= data;\r\n\t\tself.lastQuery\t\t= null;\r\n\r\n\t\tif( user_created ){\r\n\t\t\tself.userOptions[key] = user_created;\r\n\t\t\tself.trigger('option_add', key, data);\r\n\t\t}\r\n\r\n\t\treturn key;\r\n\t}\r\n\r\n\t/**\r\n\t * Add multiple options\r\n\t *\r\n\t */\r\n\taddOptions( data:TomOption[], user_created = false ):void{\r\n\t\titerate( data, (dat:TomOption) => {\r\n\t\t\tthis.addOption(dat, user_created);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated 1.7.7\r\n\t */\r\n\tregisterOption( data:TomOption ):false|string {\r\n\t\treturn this.addOption(data);\r\n\t}\r\n\r\n\t/**\r\n\t * Registers an option group to the pool of option groups.\r\n\t *\r\n\t * @return {boolean|string}\r\n\t */\r\n\tregisterOptionGroup(data:TomOption) {\r\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\r\n\r\n\t\tif ( key === null ) return false;\r\n\r\n\t\tdata.$order = data.$order || ++this.order;\r\n\t\tthis.optgroups[key] = data;\r\n\t\treturn key;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new optgroup for options\r\n\t * to be bucketed into.\r\n\t *\r\n\t */\r\n\taddOptionGroup(id:string, data:TomOption) {\r\n\t\tvar hashed_id;\r\n\t\tdata[this.settings.optgroupValueField] = id;\r\n\r\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\r\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an existing option group.\r\n\t *\r\n\t */\r\n\tremoveOptionGroup(id:string) {\r\n\t\tif (this.optgroups.hasOwnProperty(id)) {\r\n\t\t\tdelete this.optgroups[id];\r\n\t\t\tthis.clearCache();\r\n\t\t\tthis.trigger('optgroup_remove', id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all existing option groups.\r\n\t */\r\n\tclearOptionGroups() {\r\n\t\tthis.optgroups = {};\r\n\t\tthis.clearCache();\r\n\t\tthis.trigger('optgroup_clear');\r\n\t}\r\n\r\n\t/**\r\n\t * Updates an option available for selection. If\r\n\t * it is visible in the selected items or options\r\n\t * dropdown, it will be re-rendered automatically.\r\n\t *\r\n\t */\r\n\tupdateOption(value:string, data:TomOption) {\r\n\t\tconst self = this;\r\n\t\tvar item_new;\r\n\t\tvar index_item;\r\n\r\n\t\tconst value_old\t\t= hash_key(value);\r\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\r\n\r\n\t\t// sanity checks\r\n\t\tif( value_old === null ) return;\r\n\r\n\t\tconst data_old\t\t= self.options[value_old];\r\n\r\n\t\tif( data_old == undefined ) return;\r\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\r\n\r\n\r\n\t\tconst option\t\t= self.getOption(value_old);\r\n\t\tconst item\t\t\t= self.getItem(value_old);\r\n\r\n\r\n\t\tdata.$order = data.$order || data_old.$order;\r\n\t\tdelete self.options[value_old];\r\n\r\n\t\t// invalidate render cache\r\n\t\t// don't remove existing node yet, we'll remove it after replacing it\r\n\t\tself.uncacheValue(value_new);\r\n\r\n\t\tself.options[value_new] = data;\r\n\r\n\t\t// update the option if it's in the dropdown\r\n\t\tif( option ){\r\n\t\t\tif( self.dropdown_content.contains(option) ){\r\n\r\n\t\t\t\tconst option_new\t= self._render('option', data);\r\n\t\t\t\treplaceNode(option, option_new);\r\n\r\n\t\t\t\tif( self.activeOption === option ){\r\n\t\t\t\t\tself.setActiveOption(option_new);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\toption.remove();\r\n\t\t}\r\n\r\n\t\t// update the item if we have one\r\n\t\tif( item ){\r\n\t\t\tindex_item = self.items.indexOf(value_old);\r\n\t\t\tif (index_item !== -1) {\r\n\t\t\t\tself.items.splice(index_item, 1, value_new);\r\n\t\t\t}\r\n\r\n\t\t\titem_new\t= self._render('item', data);\r\n\r\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\r\n\r\n\t\t\treplaceNode( item, item_new);\r\n\t\t}\r\n\r\n\t\t// invalidate last query because we might have updated the sortField\r\n\t\tself.lastQuery = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a single option.\r\n\t *\r\n\t */\r\n\tremoveOption(value:string, silent?:boolean):void {\r\n\t\tconst self = this;\r\n\t\tvalue = get_hash(value);\r\n\r\n\t\tself.uncacheValue(value);\r\n\r\n\t\tdelete self.userOptions[value];\r\n\t\tdelete self.options[value];\r\n\t\tself.lastQuery = null;\r\n\t\tself.trigger('option_remove', value);\r\n\t\tself.removeItem(value, silent);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all options.\r\n\t */\r\n\tclearOptions(filter?:TomClearFilter ) {\r\n\r\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\r\n\r\n\t\tthis.loadedSearches\t\t= {};\r\n\t\tthis.userOptions\t\t= {};\r\n\t\tthis.clearCache();\r\n\r\n\t\tconst selected:TomOptions\t= {};\r\n\t\titerate(this.options,(option:TomOption,key:string)=>{\r\n\t\t\tif( boundFilter(option,key as string) ){\r\n\t\t\t\tselected[key] = option;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.options = this.sifter.items = selected;\r\n\t\tthis.lastQuery = null;\r\n\t\tthis.trigger('option_clear');\r\n\t}\r\n\r\n\t/**\r\n\t * Used by clearOptions() to decide whether or not an option should be removed\r\n\t * Return true to keep an option, false to remove\r\n\t *\r\n\t */\r\n\tclearFilter(option:TomOption,value:string){\r\n\t\tif( this.items.indexOf(value) >= 0 ){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the dom element of the option\r\n\t * matching the given value.\r\n\t *\r\n\t */\r\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\r\n\r\n\t\tconst hashed = hash_key(value);\r\n\t\tif( hashed === null ) return null;\r\n\r\n\t\tconst option = this.options[hashed];\r\n\t\tif( option != undefined ){\r\n\r\n\t\t\tif( option.$div ){\r\n\t\t\t\treturn option.$div;\r\n\t\t\t}\r\n\r\n\t\t\tif( create ){\r\n\t\t\t\treturn this._render('option', option);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the dom element of the next or previous dom element of the same type\r\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\r\n\t *\r\n\t */\r\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\r\n\t\tvar self = this, all;\r\n\r\n\t\tif( !option ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif( type == 'item' ){\r\n\t\t\tall\t\t\t= self.controlChildren();\r\n\t\t}else{\r\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\r\n\t\t}\r\n\r\n\t\tfor( let i = 0; i < all.length; i++ ){\r\n\t\t\tif( all[i] != option ){\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif( direction > 0 ){\r\n\t\t\t\treturn all[i+1] as HTMLElement;\r\n\t\t\t}\r\n\r\n\t\t\treturn all[i-1] as HTMLElement;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns the dom element of the item\r\n\t * matching the given value.\r\n\t *\r\n\t */\r\n\tgetItem(item:string|TomItem|null):null|TomItem {\r\n\r\n\t\tif( typeof item == 'object' ){\r\n\t\t\treturn item;\r\n\t\t}\r\n\r\n\t\tvar value = hash_key(item);\r\n\t\treturn value !== null\r\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\t/**\r\n\t * \"Selects\" multiple items at once. Adds them to the list\r\n\t * at the current caret position.\r\n\t *\r\n\t */\r\n\taddItems( values:string|string[], silent?:boolean ):void{\r\n\t\tvar self = this;\r\n\r\n\t\tvar items = Array.isArray(values) ? values : [values];\r\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\r\n\t\tconst last_item = items[items.length - 1];\r\n\t\titems.forEach(item => {\r\n\t\t\tself.isPending = (item !== last_item);\r\n\t\t\tself.addItem(item, silent);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * \"Selects\" an item. Adds it to the list\r\n\t * at the current caret position.\r\n\t *\r\n\t */\r\n\taddItem( value:string, silent?:boolean ):void{\r\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\r\n\r\n\t\tdebounce_events(this, events, () => {\r\n\t\t\tvar item, wasFull;\r\n\t\t\tconst self = this;\r\n\t\t \tconst inputMode = self.settings.mode;\r\n\t\t\tconst hashed = hash_key(value);\r\n\r\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\r\n\r\n\t\t\t\tif( inputMode === 'single' ){\r\n\t\t\t\t\tself.close();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\r\n\t\t\tif (inputMode === 'single') self.clear(silent);\r\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\r\n\r\n\t\t\titem = self._render('item', self.options[hashed]);\r\n\r\n\t\t\tif( self.control.contains(item) ){ // duplicates\r\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\r\n\t\t\t}\r\n\r\n\t\t\twasFull = self.isFull();\r\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\r\n\t\t\tself.insertAtCaret(item);\r\n\r\n\t\t\tif (self.isSetup) {\r\n\r\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\r\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\r\n\t\t\t\t\tlet option = self.getOption(hashed);\r\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\r\n\t\t\t\t\tif( next ){\r\n\t\t\t\t\t\tself.setActiveOption(next);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// refreshOptions after setActiveOption(),\r\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\r\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\r\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\r\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\r\n\t\t\t\t\tself.close();\r\n\t\t\t\t} else if (!self.isPending) {\r\n\t\t\t\t\tself.positionDropdown();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.trigger('item_add', hashed, item);\r\n\r\n\t\t\t\tif (!self.isPending) {\r\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\r\n\t\t\t\tself.inputState();\r\n\t\t\t\tself.refreshState();\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the selected item matching\r\n\t * the provided value.\r\n\t *\r\n\t */\r\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\r\n\t\tconst self\t\t= this;\r\n\t\titem\t\t\t= self.getItem(item);\r\n\r\n\t\tif( !item ) return;\r\n\r\n\t\tvar i,idx;\r\n\t\tconst value\t= item.dataset.value;\r\n\t\ti = nodeIndex(item);\r\n\r\n\t\titem.remove();\r\n\t\tif( item.classList.contains('active') ){\r\n\t\t\tidx = self.activeItems.indexOf(item);\r\n\t\t\tself.activeItems.splice(idx, 1);\r\n\t\t\tremoveClasses(item,'active');\r\n\t\t}\r\n\r\n\t\tself.items.splice(i, 1);\r\n\t\tself.lastQuery = null;\r\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\r\n\t\t\tself.removeOption(value, silent);\r\n\t\t}\r\n\r\n\t\tif (i < self.caretPos) {\r\n\t\t\tself.setCaret(self.caretPos - 1);\r\n\t\t}\r\n\r\n\t\tself.updateOriginalInput({silent: silent});\r\n\t\tself.refreshState();\r\n\t\tself.positionDropdown();\r\n\t\tself.trigger('item_remove', value, item);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Invokes the `create` method provided in the\r\n\t * TomSelect options that should provide the data\r\n\t * for the new item, given the user input.\r\n\t *\r\n\t * Once this completes, it will be added\r\n\t * to the item list.\r\n\t *\r\n\t */\r\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\r\n\r\n\t\t// triggerDropdown parameter @deprecated 2.1.1\r\n\t\tif( arguments.length === 3 ){\r\n\t\t\tcallback = arguments[2];\r\n\t\t}\r\n\t\tif( typeof callback != 'function' ){\r\n\t\t\tcallback = () => {};\r\n\t\t}\r\n\r\n\t\tvar self  = this;\r\n\t\tvar caret = self.caretPos;\r\n\t\tvar output;\r\n\t\tinput = input || self.inputValue();\r\n\r\n\t\tif (!self.canCreate(input)) {\r\n\t\t\tcallback();\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tself.lock();\r\n\r\n\t\tvar created = false;\r\n\t\tvar create = (data?:boolean|TomOption) => {\r\n\t\t\tself.unlock();\r\n\r\n\t\t\tif (!data || typeof data !== 'object') return callback();\r\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\r\n\t\t\tif( typeof value !== 'string' ){\r\n\t\t\t\treturn callback();\r\n\t\t\t}\r\n\r\n\t\t\tself.setTextboxValue();\r\n\t\t\tself.addOption(data,true);\r\n\t\t\tself.setCaret(caret);\r\n\t\t\tself.addItem(value);\r\n\t\t\tcallback(data);\r\n\t\t\tcreated = true;\r\n\t\t};\r\n\r\n\t\tif( typeof self.settings.create === 'function' ){\r\n\t\t\toutput = self.settings.create.call(this, input, create);\r\n\t\t}else{\r\n\t\t\toutput = {\r\n\t\t\t\t[self.settings.labelField]: input,\r\n\t\t\t\t[self.settings.valueField]: input,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif( !created ){\r\n\t\t\tcreate(output);\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Re-renders the selected item lists.\r\n\t */\r\n\trefreshItems() {\r\n\t\tvar self = this;\r\n\t\tself.lastQuery = null;\r\n\r\n\t\tif (self.isSetup) {\r\n\t\t\tself.addItems(self.items);\r\n\t\t}\r\n\r\n\t\tself.updateOriginalInput();\r\n\t\tself.refreshState();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates all state-dependent attributes\r\n\t * and CSS classes.\r\n\t */\r\n\trefreshState() {\r\n\t\tconst self     = this;\r\n\r\n\t\tself.refreshValidityState();\r\n\r\n\t\tconst isFull\t= self.isFull();\r\n\t\tconst isLocked\t= self.isLocked;\r\n\r\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\r\n\r\n\r\n\t\tconst wrap_classList = self.wrapper.classList;\r\n\r\n\t\twrap_classList.toggle('focus', self.isFocused)\r\n\t\twrap_classList.toggle('disabled', self.isDisabled)\r\n\t\twrap_classList.toggle('readonly', self.isReadOnly)\r\n\t\twrap_classList.toggle('required', self.isRequired)\r\n\t\twrap_classList.toggle('invalid', !self.isValid)\r\n\t\twrap_classList.toggle('locked', isLocked)\r\n\t\twrap_classList.toggle('full', isFull)\r\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\r\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\r\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\r\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Update the `required` attribute of both input and control input.\r\n\t *\r\n\t * The `required` property needs to be activated on the control input\r\n\t * for the error to be displayed at the right place. `required` also\r\n\t * needs to be temporarily deactivated on the input since the input is\r\n\t * hidden and can't show errors.\r\n\t */\r\n\trefreshValidityState() {\r\n\t\tvar self = this;\r\n\r\n\t\tif( !self.input.validity ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tself.isValid = self.input.validity.valid;\r\n\t\tself.isInvalid = !self.isValid;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not more items can be added\r\n\t * to the control without exceeding the user-defined maximum.\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tisFull() {\r\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the original <select> or <input>\r\n\t * element to reflect the current state.\r\n\t *\r\n\t */\r\n\tupdateOriginalInput( opts:TomArgObject = {} ){\r\n\t\tconst self = this;\r\n\t\tvar option, label;\r\n\r\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\r\n\r\n\t\tif( self.is_select_tag ){\r\n\r\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\r\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\r\n\r\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\r\n\r\n\t\t\t\tif( !option_el ){\r\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// don't move empty option from top of list\r\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\r\n\t\t\t\tif( option_el != empty_option ){\r\n\t\t\t\t\tself.input.append(option_el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselected.push(option_el);\r\n\r\n\t\t\t\t// marking empty option as selected can break validation\r\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\r\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\r\n\t\t\t\t\toption_el.selected = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn option_el;\r\n\t\t\t}\r\n\r\n\t\t\t// unselect all selected options\r\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\r\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// nothing selected?\r\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\r\n\r\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\r\n\r\n\t\t\t// order selected <option> tags for values in self.items\r\n\t\t\t}else{\r\n\r\n\t\t\t\tself.items.forEach((value)=>{\r\n\t\t\t\t\toption\t\t\t= self.options[value]!;\r\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\r\n\r\n\t\t\t\t\tif( selected.includes(option.$option) ){\r\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\r\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tself.input.value = self.getValue() as string;\r\n\t\t}\r\n\r\n\t\tif (self.isSetup) {\r\n\t\t\tif (!opts.silent) {\r\n\t\t\t\tself.trigger('change', self.getValue() );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the autocomplete dropdown containing\r\n\t * the available options.\r\n\t */\r\n\topen() {\r\n\t\tvar self = this;\r\n\r\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\r\n\t\tself.isOpen = true;\r\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\r\n\t\tself.refreshState();\r\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\r\n\t\tself.positionDropdown();\r\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\r\n\t\tself.focus();\r\n\t\tself.trigger('dropdown_open', self.dropdown);\r\n\t}\r\n\r\n\t/**\r\n\t * Closes the autocomplete dropdown menu.\r\n\t */\r\n\tclose(setTextboxValue=true) {\r\n\t\tvar self = this;\r\n\t\tvar trigger = self.isOpen;\r\n\r\n\t\tif( setTextboxValue ){\r\n\r\n\t\t\t// before blur() to prevent form onchange event\r\n\t\t\tself.setTextboxValue();\r\n\r\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\r\n\t\t\t\tself.inputState();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tself.isOpen = false;\r\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\r\n\t\tapplyCSS(self.dropdown,{display: 'none'});\r\n\t\tif( self.settings.hideSelected ){\r\n\t\t\tself.clearActiveOption();\r\n\t\t}\r\n\t\tself.refreshState();\r\n\r\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates and applies the appropriate\r\n\t * position of the dropdown if dropdownParent = 'body'.\r\n\t * Otherwise, position is determined by css\r\n\t */\r\n\tpositionDropdown(){\r\n\r\n\t\tif( this.settings.dropdownParent !== 'body' ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar context\t\t\t= this.control;\r\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\r\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\r\n\t\tvar left\t\t\t= rect.left + window.scrollX;\r\n\r\n\r\n\t\tapplyCSS(this.dropdown,{\r\n\t\t\twidth : rect.width + 'px',\r\n\t\t\ttop   : top + 'px',\r\n\t\t\tleft  : left + 'px'\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets / clears all selected items\r\n\t * from the control.\r\n\t *\r\n\t */\r\n\tclear(silent?:boolean) {\r\n\t\tvar self = this;\r\n\r\n\t\tif (!self.items.length) return;\r\n\r\n\t\tvar items = self.controlChildren();\r\n\t\titerate(items,(item:TomItem)=>{\r\n\t\t\tself.removeItem(item,true);\r\n\t\t});\r\n\r\n\t\tself.inputState();\r\n\t\tif( !silent ) self.updateOriginalInput();\r\n\t\tself.trigger('clear');\r\n\t}\r\n\r\n\t/**\r\n\t * A helper method for inserting an element\r\n\t * at the current caret position.\r\n\t *\r\n\t */\r\n\tinsertAtCaret(el:HTMLElement) {\r\n\t\tconst self\t\t= this;\r\n\t\tconst caret\t\t= self.caretPos;\r\n\t\tconst target\t= self.control;\r\n\r\n\t\ttarget.insertBefore(el, target.children[caret] || null);\r\n\t\tself.setCaret(caret + 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the current selected item(s).\r\n\t *\r\n\t */\r\n\tdeleteSelection(e:KeyboardEvent):boolean {\r\n\t\tvar direction, selection, caret, tail;\r\n\t\tvar self = this;\r\n\r\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\r\n\t\tselection = getSelection(self.control_input);\r\n\r\n\r\n\t\t// determine items that will be removed\r\n\t\tconst rm_items:TomItem[]\t= [];\r\n\r\n\t\tif (self.activeItems.length) {\r\n\r\n\t\t\ttail = getTail(self.activeItems, direction);\r\n\t\t\tcaret = nodeIndex(tail);\r\n\r\n\t\t\tif (direction > 0) { caret++; }\r\n\r\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\r\n\r\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\r\n\t\t\tconst items = self.controlChildren();\r\n\t\t\tlet rm_item;\r\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\r\n\t\t\t\trm_item = items[self.caretPos - 1];\r\n\r\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\r\n\t\t\t\trm_item = items[self.caretPos];\r\n\t\t\t}\r\n\r\n\t\t\tif( rm_item !== undefined ){\r\n\t\t\t\trm_items.push( rm_item );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( !self.shouldDelete(rm_items,e) ){\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tpreventDefault(e,true);\r\n\r\n\t\t// perform removal\r\n\t\tif (typeof caret !== 'undefined') {\r\n\t\t\tself.setCaret(caret);\r\n\t\t}\r\n\r\n\t\twhile( rm_items.length ){\r\n\t\t\tself.removeItem(rm_items.pop());\r\n\t\t}\r\n\r\n\t\tself.inputState();\r\n\t\tself.positionDropdown();\r\n\t\tself.refreshOptions(false);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if the items should be deleted\r\n\t */\r\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\r\n\r\n\t\tconst values = items.map(item => item.dataset.value);\r\n\r\n\t\t// allow the callback to abort\r\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Selects the previous / next item (depending on the `direction` argument).\r\n\t *\r\n\t * > 0 - right\r\n\t * < 0 - left\r\n\t *\r\n\t */\r\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\r\n\t\tvar last_active, adjacent, self = this;\r\n\r\n\t\tif (self.rtl) direction *= -1;\r\n\t\tif( self.inputValue().length ) return;\r\n\r\n\r\n\t\t// add or remove to active items\r\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\r\n\r\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\r\n\t\t\tif( last_active ){\r\n\r\n\t\t\t\tif( !last_active.classList.contains('active') ){\r\n\t\t\t\t\tadjacent\t\t\t= last_active;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\r\n\t\t\t\t}\r\n\r\n\t\t\t// if no active item, get items adjacent to the control input\r\n\t\t\t}else if( direction > 0 ){\r\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\r\n\t\t\t}else{\r\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif( adjacent ){\r\n\t\t\t\tif( adjacent.classList.contains('active') ){\r\n\t\t\t\t\tself.removeActiveItem(last_active);\r\n\t\t\t\t}\r\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\r\n\t\t\t}\r\n\r\n\t\t// move caret to the left or right\r\n\t\t}else{\r\n\t\t\tself.moveCaret(direction);\r\n\t\t}\r\n\t}\r\n\r\n\tmoveCaret(direction:number){}\r\n\r\n\t/**\r\n\t * Get the last active item\r\n\t *\r\n\t */\r\n\tgetLastActive(direction?:number){\r\n\r\n\t\tlet last_active = this.control.querySelector('.last-active');\r\n\t\tif( last_active ){\r\n\t\t\treturn last_active;\r\n\t\t}\r\n\r\n\r\n\t\tvar result = this.control.querySelectorAll('.active');\r\n\t\tif( result ){\r\n\t\t\treturn getTail(result,direction);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the caret to the specified index.\r\n\t *\r\n\t * The input must be moved by leaving it in place and moving the\r\n\t * siblings, due to the fact that focus cannot be restored once lost\r\n\t * on mobile webkit devices\r\n\t *\r\n\t */\r\n\tsetCaret(new_pos:number) {\r\n\t\tthis.caretPos = this.items.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of item dom elements\r\n\t *\r\n\t */\r\n\tcontrolChildren():TomItem[]{\r\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\r\n\t}\r\n\r\n\t/**\r\n\t * Disables user input on the control. Used while\r\n\t * items are being asynchronously created.\r\n\t */\r\n\tlock() {\r\n\t\tthis.setLocked(true);\r\n\t}\r\n\r\n\t/**\r\n\t * Re-enables user input on the control.\r\n\t */\r\n\tunlock() {\r\n\t\tthis.setLocked(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable or enable user input on the control\r\n\t */\r\n\tsetLocked( lock:boolean = this.isReadOnly || this.isDisabled ){\r\n\t\tthis.isLocked = lock;\r\n\t\tthis.refreshState();\r\n\t}\r\n\r\n\t/**\r\n\t * Disables user input on the control completely.\r\n\t * While disabled, it cannot receive focus.\r\n\t */\r\n\tdisable() {\r\n\t\tthis.setDisabled(true);\r\n\t\tthis.close();\r\n\t}\r\n\r\n\t/**\r\n\t * Enables the control so that it can respond\r\n\t * to focus and user input.\r\n\t */\r\n\tenable() {\r\n\t\tthis.setDisabled(false);\r\n\t}\r\n\r\n\tsetDisabled(disabled:boolean){\r\n\t\tthis.focus_node.tabIndex\t\t= disabled ? -1 : this.tabIndex;\r\n\t\tthis.isDisabled\t\t\t\t\t= disabled;\r\n\t\tthis.input.disabled\t\t\t\t= disabled;\r\n\t\tthis.control_input.disabled\t\t= disabled;\r\n\t\tthis.setLocked();\r\n\t}\r\n\r\n\tsetReadOnly(isReadOnly:boolean){\r\n\t\tthis.isReadOnly\t\t\t\t\t= isReadOnly;\r\n\t\tthis.input.readOnly\t\t\t\t= isReadOnly;\r\n\t\tthis.control_input.readOnly\t\t= isReadOnly;\r\n\t\tthis.setLocked();\r\n\t}\r\n\r\n\t/**\r\n\t * Completely destroys the control and\r\n\t * unbinds all event listeners so that it can\r\n\t * be garbage collected.\r\n\t */\r\n\tdestroy() {\r\n\t\tvar self = this;\r\n\t\tvar revertSettings = self.revertSettings;\r\n\r\n\t\tself.trigger('destroy');\r\n\t\tself.off();\r\n\t\tself.wrapper.remove();\r\n\t\tself.dropdown.remove();\r\n\r\n\t\tself.input.innerHTML = revertSettings.innerHTML;\r\n\t\tself.input.tabIndex = revertSettings.tabIndex;\r\n\r\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\r\n\r\n\t\tself._destroy();\r\n\r\n\t\tdelete self.input.tomselect;\r\n\t}\r\n\r\n\t/**\r\n\t * A helper method for rendering \"item\" and\r\n\t * \"option\" templates, given the data.\r\n\t *\r\n\t */\r\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\r\n\t\tvar id, html;\r\n\t\tconst self = this;\r\n\r\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// render markup\r\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\r\n\r\n\t\tif( !html ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\thtml = getDom( html );\r\n\r\n\t\t// add mandatory attributes\r\n\t\tif (templateName === 'option' || templateName === 'option_create') {\r\n\r\n\t\t\tif( data[self.settings.disabledField] ){\r\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\r\n\t\t\t}else{\r\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\r\n\t\t\t}\r\n\r\n\t\t}else if (templateName === 'optgroup') {\r\n\t\t\tid = data.group[self.settings.optgroupValueField];\r\n\t\t\tsetAttr(html,{'data-group': id});\r\n\t\t\tif(data.group[self.settings.disabledField]) {\r\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (templateName === 'option' || templateName === 'item') {\r\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\r\n\t\t\tsetAttr(html,{'data-value': value });\r\n\r\n\r\n\t\t\t// make sure we have some classes if a template is overwritten\r\n\t\t\tif( templateName === 'item' ){\r\n\t\t\t\taddClasses(html,self.settings.itemClass);\r\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\r\n\t\t\t}else{\r\n\t\t\t\taddClasses(html,self.settings.optionClass);\r\n\t\t\t\tsetAttr(html,{\r\n\t\t\t\t\trole:'option',\r\n\t\t\t\t\tid:data.$id\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// update cache\r\n\t\t\t\tdata.$div = html;\r\n\t\t\t\tself.options[value] = data;\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Type guarded rendering\r\n\t *\r\n\t */\r\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\r\n\t\tconst html = this.render(templateName, data);\r\n\r\n\t\tif( html == null ){\r\n\t\t\tthrow 'HTMLElement expected';\r\n\t\t}\r\n\t\treturn html;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Clears the render cache for a template. If\r\n\t * no template is given, clears all render\r\n\t * caches.\r\n\t *\r\n\t */\r\n\tclearCache():void{\r\n\r\n\t\titerate(this.options, (option:TomOption)=>{\r\n\t\t\tif( option.$div ){\r\n\t\t\t\toption.$div.remove();\r\n\t\t\t\tdelete option.$div;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a value from item and option caches\r\n\t *\r\n\t */\r\n\tuncacheValue(value:string){\r\n\r\n\t\tconst option_el\t\t\t= this.getOption(value);\r\n\t\tif( option_el ) option_el.remove();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not to display the\r\n\t * create item prompt, given a user input.\r\n\t *\r\n\t */\r\n\tcanCreate( input:string ):boolean {\r\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\r\n\t *\r\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\r\n\t *\r\n\t * });\r\n\t */\r\n\thook( when:string, method:string, new_fn:any ){\r\n\t\tvar self = this;\r\n\t\tvar orig_method = self[method];\r\n\r\n\r\n\t\tself[method] = function(){\r\n\t\t\tvar result, result_new;\r\n\r\n\t\t\tif( when === 'after' ){\r\n\t\t\t\tresult = orig_method.apply(self, arguments);\r\n\t\t\t}\r\n\r\n\t\t\tresult_new = new_fn.apply(self, arguments );\r\n\r\n\t\t\tif( when === 'instead' ){\r\n\t\t\t\treturn result_new;\r\n\t\t\t}\r\n\r\n\t\t\tif( when === 'before' ){\r\n\t\t\t\tresult = orig_method.apply(self, arguments);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t};\r\n\r\n\t}\r\n\r\n};\r\n","/**\r\n * microplugin.js\r\n * Copyright (c) 2013 Brian Reavis & contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n * @author Brian Reavis <brian@thirdroute.com>\r\n */\r\n\r\ntype TSettings = {\r\n\t[key:string]:any\r\n}\r\n\r\ntype TPlugins = {\r\n\tnames: string[],\r\n\tsettings: TSettings,\r\n\trequested: {[key:string]:boolean},\r\n\tloaded: {[key:string]:any}\r\n};\r\n\r\nexport type TPluginItem = {name:string,options:{}};\r\nexport type TPluginHash = {[key:string]:{}};\r\n\r\n\r\n\r\n\r\nexport default function MicroPlugin(Interface: any ){\r\n\r\n\tInterface.plugins = {};\r\n\r\n\treturn class extends Interface{\r\n\r\n\t\tpublic plugins:TPlugins = {\r\n\t\t\tnames     : [],\r\n\t\t\tsettings  : {},\r\n\t\t\trequested : {},\r\n\t\t\tloaded    : {}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Registers a plugin.\r\n\t\t *\r\n\t\t * @param {function} fn\r\n\t\t */\r\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\r\n\t\t\tInterface.plugins[name] = {\r\n\t\t\t\t'name' : name,\r\n\t\t\t\t'fn'   : fn\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Initializes the listed plugins (with options).\r\n\t\t * Acceptable formats:\r\n\t\t *\r\n\t\t * List (without options):\r\n\t\t *   ['a', 'b', 'c']\r\n\t\t *\r\n\t\t * List (with options):\r\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\r\n\t\t *\r\n\t\t * Hash (with options):\r\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\r\n\t\t *\r\n\t\t * @param {array|object} plugins\r\n\t\t */\r\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\r\n\t\t\tvar key, name;\r\n\t\t\tconst self  = this;\r\n\t\t\tconst queue:string[] = [];\r\n\r\n\t\t\tif (Array.isArray(plugins)) {\r\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\r\n\t\t\t\t\tif (typeof plugin === 'string') {\r\n\t\t\t\t\t\tqueue.push(plugin);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\r\n\t\t\t\t\t\tqueue.push(plugin.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else if (plugins) {\r\n\t\t\t\tfor (key in plugins) {\r\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\r\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\r\n\t\t\t\t\t\tqueue.push(key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile( name = queue.shift() ){\r\n\t\t\t\tself.require(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tloadPlugin(name:string) {\r\n\t\t\tvar self    = this;\r\n\t\t\tvar plugins = self.plugins;\r\n\t\t\tvar plugin  = Interface.plugins[name];\r\n\r\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\r\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\r\n\t\t\t}\r\n\r\n\t\t\tplugins.requested[name] = true;\r\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\r\n\t\t\tplugins.names.push(name);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Initializes a plugin.\r\n\t\t *\r\n\t\t */\r\n\t\trequire(name:string) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar plugins = self.plugins;\r\n\r\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\r\n\t\t\t\tif (plugins.requested[name]) {\r\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\r\n\t\t\t\t}\r\n\t\t\t\tself.loadPlugin(name);\r\n\t\t\t}\r\n\r\n\t\t\treturn plugins.loaded[name];\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n","import TomSelect from './tom-select.ts';\r\n\r\nimport change_listener from './plugins/change_listener/plugin.ts';\r\nimport checkbox_options from './plugins/checkbox_options/plugin.ts';\r\nimport clear_button from './plugins/clear_button/plugin.ts';\r\nimport drag_drop from './plugins/drag_drop/plugin.ts';\r\nimport dropdown_header from './plugins/dropdown_header/plugin.ts';\r\nimport caret_position from './plugins/caret_position/plugin.ts';\r\nimport dropdown_input from './plugins/dropdown_input/plugin.ts';\r\nimport input_autogrow from './plugins/input_autogrow/plugin.ts';\r\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin.ts';\r\nimport no_active_items from './plugins/no_active_items/plugin.ts';\r\nimport optgroup_columns from './plugins/optgroup_columns/plugin.ts';\r\nimport remove_button from './plugins/remove_button/plugin.ts';\r\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin.ts';\r\nimport virtual_scroll from './plugins/virtual_scroll/plugin.ts';\r\n\r\nTomSelect.define('change_listener', change_listener);\r\nTomSelect.define('checkbox_options', checkbox_options);\r\nTomSelect.define('clear_button', clear_button);\r\nTomSelect.define('drag_drop', drag_drop);\r\nTomSelect.define('dropdown_header', dropdown_header);\r\nTomSelect.define('caret_position', caret_position);\r\nTomSelect.define('dropdown_input', dropdown_input);\r\nTomSelect.define('input_autogrow', input_autogrow);\r\nTomSelect.define('no_backspace_delete', no_backspace_delete);\r\nTomSelect.define('no_active_items', no_active_items);\r\nTomSelect.define('optgroup_columns', optgroup_columns);\r\nTomSelect.define('remove_button', remove_button);\r\nTomSelect.define('restore_on_backspace', restore_on_backspace);\r\nTomSelect.define('virtual_scroll', virtual_scroll);\r\n\r\nexport default TomSelect;\r\n","/**\r\n * Plugin: \"change_listener\" (Tom Select)\r\n * Copyright (c) contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport type TomSelect from '../../tom-select.ts';\r\nimport { addEvent } from '../../utils.ts';\r\n\r\nexport default function(this:TomSelect) {\r\n\taddEvent(this.input,'change',()=>{\r\n\t\tthis.sync();\r\n\t});\r\n};\r\n","/**\r\n * Plugin: \"checkbox_options\" (Tom Select)\r\n * Copyright (c) contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport type TomSelect from '../../tom-select.ts';\r\nimport { TomTemplate } from '../../types/index.ts';\r\nimport { preventDefault, hash_key } from '../../utils.ts';\r\nimport { getDom } from '../../vanilla.ts';\r\nimport { CBOptions } from './types.ts';\r\n\r\n\r\nexport default function(this:TomSelect, userOptions:CBOptions) {\r\n\tvar self = this;\r\n\tvar orig_onOptionSelect = self.onOptionSelect;\r\n\r\n\tself.settings.hideSelected = false;\r\n\r\n\tconst cbOptions : CBOptions = Object.assign({\r\n\t\t// so that the user may add different ones as well\r\n\t\tclassName             : \"tomselect-checkbox\",\r\n\r\n\t\t// the following default to the historic plugin's values\r\n\t\tcheckedClassNames     : undefined,\r\n\t\tuncheckedClassNames   : undefined,\r\n\t}, userOptions);\r\n\r\n\r\n\tvar UpdateChecked = function(checkbox:HTMLInputElement, toCheck : boolean) {\r\n\t\tif( toCheck ){\r\n\t\t\tcheckbox.checked = true;\r\n\t\t\tif (cbOptions.uncheckedClassNames) {\r\n\t\t\t\tcheckbox.classList.remove(...cbOptions.uncheckedClassNames);\r\n\t\t\t}\r\n\t\t\tif (cbOptions.checkedClassNames) {\r\n\t\t\t\tcheckbox.classList.add(...cbOptions.checkedClassNames);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcheckbox.checked = false;\r\n\t\t\tif (cbOptions.checkedClassNames) {\r\n\t\t\t\tcheckbox.classList.remove(...cbOptions.checkedClassNames);\r\n\t\t\t}\r\n\t\t\tif (cbOptions.uncheckedClassNames) {\r\n\t\t\t\tcheckbox.classList.add(...cbOptions.uncheckedClassNames);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// update the checkbox for an option\r\n\tvar UpdateCheckbox = function(option:HTMLElement){\r\n\t\tsetTimeout(()=>{\r\n\t\t\tvar checkbox = option.querySelector('input.' + cbOptions.className);\r\n\t\t\tif( checkbox instanceof HTMLInputElement ){\r\n\t\t\t\tUpdateChecked(checkbox, option.classList.contains('selected'));\r\n\t\t\t}\r\n\t\t},1);\r\n\t};\r\n\r\n\t// add checkbox to option template\r\n\tself.hook('after','setupTemplates',() => {\r\n\r\n\t\tvar orig_render_option = self.settings.render.option;\r\n\r\n\t\tself.settings.render.option = ((data, escape_html) => {\r\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\r\n\t\t\tvar checkbox = document.createElement('input');\r\n\t\t\tif (cbOptions.className) {\r\n\t\t\t\tcheckbox.classList.add(cbOptions.className);\r\n\t\t\t}\r\n\t\t\tcheckbox.addEventListener('click',function(evt){\r\n\t\t\t\tpreventDefault(evt);\r\n\t\t\t});\r\n\r\n\t\t\tcheckbox.type = 'checkbox';\r\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\r\n\r\n\t\t\tUpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1) );\r\n\r\n\t\t\trendered.prepend(checkbox);\r\n\t\t\treturn rendered;\r\n\t\t}) satisfies TomTemplate;\r\n\t});\r\n\r\n\t// uncheck when item removed\r\n\tself.on('item_remove',(value:string) => {\r\n\t\tvar option = self.getOption(value);\r\n\r\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\r\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\r\n\t\t\tUpdateCheckbox(option);\r\n\t\t}\r\n\t});\r\n\r\n\t// check when item added\r\n\tself.on('item_add',(value:string) => {\r\n\t\tvar option = self.getOption(value);\r\n\r\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\r\n\t\t\tUpdateCheckbox(option);\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t// remove items when selected option is clicked\r\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\r\n\r\n\t\tif( option.classList.contains('selected') ){\r\n\t\t\toption.classList.remove('selected')\r\n\t\t\tself.removeItem(option.dataset.value);\r\n\t\t\tself.refreshOptions();\r\n\t\t\tpreventDefault(evt,true);\r\n\t\t\treturn;\r\n        }\r\n\r\n\t\torig_onOptionSelect.call(self, evt, option);\r\n\r\n\t\tUpdateCheckbox(option);\r\n\t});\r\n\r\n};\r\n","/**\r\n * Plugin: \"dropdown_header\" (Tom Select)\r\n * Copyright (c) contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport type TomSelect from '../../tom-select.ts';\r\nimport { getDom } from '../../vanilla.ts';\r\nimport { CBOptions } from './types.ts';\r\n\r\nexport default function(this:TomSelect, userOptions:CBOptions) {\r\n\tconst self = this;\r\n\r\n\tconst options = Object.assign({\r\n\t\tclassName: 'clear-button',\r\n\t\ttitle: 'Clear All',\r\n\t\thtml: (data:CBOptions) => {\r\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\r\n\t\t}\r\n\t}, userOptions);\r\n\r\n\tself.on('initialize',()=>{\r\n\t\tvar button = getDom(options.html(options));\r\n\t\tbutton.addEventListener('click',(evt)=>{\r\n\r\n\t\t\tif( self.isLocked ) return;\r\n\r\n\t\t\tself.clear();\r\n\r\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\r\n\t\t\t\tself.addItem('');\r\n\t\t\t}\r\n\r\n\t\t\tevt.preventDefault();\r\n\t\t\tevt.stopPropagation();\r\n\t\t});\r\n\t\tself.control.appendChild(button);\r\n\t});\r\n\r\n};\r\n","/**\r\n * Plugin: \"drag_drop\" (Tom Select)\r\n * Copyright (c) contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport type TomSelect from '../../tom-select.ts';\r\nimport { TomOption, TomItem } from '../../types/index.ts';\r\nimport { escape_html, preventDefault, addEvent } from '../../utils.ts';\r\nimport { getDom, setAttr } from '../../vanilla.ts';\r\n\r\n\r\nconst insertAfter = (referenceNode:Element, newNode:Element) => {\r\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode.nextSibling);\r\n}\r\n\r\nconst insertBefore = (referenceNode:Element, newNode:Element) => {\r\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode);\r\n}\r\n\r\nconst isBefore = (referenceNode:Element|undefined|null, newNode:Element|undefined|null) =>{\r\n\t\r\n\tdo{\r\n\t\tnewNode = newNode?.previousElementSibling;\r\n\r\n\t\tif( referenceNode == newNode ){\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t}while( newNode && newNode.previousElementSibling );\r\n\r\n\treturn false;\r\n}\r\n\r\nexport default function(this:TomSelect) {\r\n\tvar self = this;\r\n\tif (self.settings.mode !== 'multi') return;\r\n\r\n\tvar orig_lock\t\t= self.lock;\r\n\tvar orig_unlock\t\t= self.unlock;\r\n\tlet sortable = true;\r\n\t\tlet drag_item:TomItem|undefined;\r\n\r\n\r\n\t/**\r\n\t * Add draggable attribute to item\r\n\t */\r\n\tself.hook('after','setupTemplates',() => {\r\n\r\n\t\tvar orig_render_item = self.settings.render.item;\r\n\r\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\r\n\t\t\tconst item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\r\n\t\t\tsetAttr(item,{'draggable':'true'});\r\n\r\n\r\n\t\t\t// prevent doc_mousedown (see tom-select.ts)\r\n\t\t\tconst mousedown = (evt:Event) => {\r\n\t\t\t\tif( !sortable ) preventDefault(evt);\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t}\r\n\r\n\t\t\tconst dragStart = (evt:Event) => {\r\n\t\t\t\tdrag_item = item;\r\n\t\t\t\t\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\titem.classList.add('ts-dragging');\r\n\t\t\t\t}, 0);\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tconst dragOver = (evt:Event) =>{\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t\titem.classList.add('ts-drag-over');\r\n\t\t\t\tmoveitem(item,drag_item);\r\n\t\t\t}\r\n\r\n\t\t\tconst dragLeave = () => {\r\n\t\t\t\titem.classList.remove('ts-drag-over');\r\n\t\t\t}\r\n\r\n\t\t\tconst moveitem = (targetitem:TomItem, dragitem:TomItem|undefined) => {\r\n\t\t\t\tif( dragitem === undefined ) return;\r\n\t\t\t\t\r\n\t\t\t\tif( isBefore(dragitem,item) ){\r\n\t\t\t\t\tinsertAfter(targetitem,dragitem);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tinsertBefore(targetitem,dragitem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst dragend = () => {\r\n\t\t\t\tdocument.querySelectorAll('.ts-drag-over').forEach(el=> el.classList.remove('ts-drag-over'));\r\n\t\t\t\tdrag_item?.classList.remove('ts-dragging');\r\n\t\t\t\tdrag_item = undefined;\r\n\r\n\t\t\t\tvar values:string[] = [];\r\n\t\t\t\tself.control.querySelectorAll(`[data-value]`).forEach((el:Element)=> {\r\n\t\t\t\t\tif( (<HTMLOptionElement>el).dataset.value ){\r\n\t\t\t\t\t\tlet value = (<HTMLOptionElement>el).dataset.value;\r\n\t\t\t\t\t\tif( value ){\r\n\t\t\t\t\t\t\tvalues.push(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tself.setValue(values);\r\n\t\t\t}\t\r\n\r\n\r\n\t\t\taddEvent(item,'mousedown', mousedown);\r\n\t\t\taddEvent(item,'dragstart', dragStart);\r\n\t\t\taddEvent(item,'dragenter', dragOver)\r\n\t\t\taddEvent(item,'dragover', dragOver);\r\n\t\t\taddEvent(item,'dragleave', dragLeave);\r\n\t\t\taddEvent(item,'dragend', dragend);\r\n\t\t\t\t\r\n\t\t\treturn item;\r\n\t\t}\t\r\n\t});\r\n\r\n\r\n\r\n\tself.hook('instead','lock',()=>{\r\n\t\tsortable = false;\r\n\t\treturn orig_lock.call(self);\r\n\t});\r\n\r\n\tself.hook('instead','unlock',()=>{\r\n\t\tsortable = true;\r\n\t\treturn orig_unlock.call(self);\r\n\t});\r\n\r\n};\r\n","/**\r\n * Plugin: \"dropdown_header\" (Tom Select)\r\n * Copyright (c) contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport type TomSelect from '../../tom-select.ts';\r\nimport { getDom } from '../../vanilla.ts';\r\nimport { preventDefault } from '../../utils.ts';\r\nimport { DHOptions } from './types.ts';\r\n\r\nexport default function(this:TomSelect, userOptions:DHOptions) {\r\n\tconst self = this;\r\n\r\n\tconst options = Object.assign({\r\n\t\ttitle         : 'Untitled',\r\n\t\theaderClass   : 'dropdown-header',\r\n\t\ttitleRowClass : 'dropdown-header-title',\r\n\t\tlabelClass    : 'dropdown-header-label',\r\n\t\tcloseClass    : 'dropdown-header-close',\r\n\r\n\t\thtml: (data:DHOptions) => {\r\n\t\t\treturn (\r\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\r\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\r\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\r\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\r\n\t\t\t\t\t'</div>' +\r\n\t\t\t\t'</div>'\r\n\t\t\t);\r\n\t\t}\r\n\t}, userOptions);\r\n\r\n\tself.on('initialize',()=>{\r\n\t\tvar header = getDom(options.html(options));\r\n\r\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\r\n\t\tif( close_link ){\r\n\t\t\tclose_link.addEventListener('click',(evt)=>{\r\n\t\t\t\tpreventDefault(evt,true);\r\n\t\t\t\tself.close();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\r\n\t});\r\n\r\n};\r\n","/**\r\n * Plugin: \"dropdown_input\" (Tom Select)\r\n * Copyright (c) contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport type TomSelect from '../../tom-select.ts';\r\nimport { nodeIndex, removeClasses } from '../../vanilla.ts';\r\n\r\n\r\nexport default function(this:TomSelect) {\r\n\tvar self = this;\r\n\r\n\t/**\r\n\t * Moves the caret to the specified index.\r\n\t *\r\n\t * The input must be moved by leaving it in place and moving the\r\n\t * siblings, due to the fact that focus cannot be restored once lost\r\n\t * on mobile webkit devices\r\n\t *\r\n\t */\r\n\tself.hook('instead','setCaret',(new_pos:number) => {\r\n\r\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\r\n\t\t\tnew_pos = self.items.length;\r\n\t\t} else {\r\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\r\n\r\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\r\n\r\n\t\t\t\tself.controlChildren().forEach((child,j) => {\r\n\t\t\t\t\tif( j < new_pos ){\r\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.control.appendChild( child );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tself.caretPos = new_pos;\r\n\t});\r\n\r\n\tself.hook('instead','moveCaret',(direction:number) => {\r\n\r\n\t\tif( !self.isFocused ) return;\r\n\r\n\t\t// move caret before or after selected items\r\n\t\tconst last_active\t\t= self.getLastActive(direction);\r\n\t\tif( last_active ){\r\n\t\t\tconst idx = nodeIndex(last_active);\r\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\r\n\t\t\tself.setActiveItem();\r\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\r\n\r\n\t\t// move caret left or right of current position\r\n\t\t}else{\r\n\t\t\tself.setCaret(self.caretPos + direction);\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n};\r\n","/**\r\n * Plugin: \"dropdown_input\" (Tom Select)\r\n * Copyright (c) contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport type TomSelect from '../../tom-select.ts';\r\nimport * as constants from '../../constants.ts';\r\nimport { getDom, addClasses } from '../../vanilla.ts';\r\nimport { addEvent, preventDefault } from '../../utils.ts';\r\n\r\n\r\nexport default function(this:TomSelect) {\r\n\tconst self = this;\r\n\r\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\r\n\r\n\tself.hook('before','setup',()=>{\r\n\t\tself.focus_node\t\t= self.control;\r\n\r\n\t\taddClasses( self.control_input, 'dropdown-input');\r\n\r\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\r\n\t\tdiv.append(self.control_input);\r\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\r\n\r\n\t\t// set a placeholder in the select control\r\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\r\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\r\n\t\tself.control.append(placeholder);\r\n\r\n\t});\r\n\r\n\r\n\tself.on('initialize',()=>{\r\n\r\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\r\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\r\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\r\n\t\t\tswitch( evt.keyCode ){\r\n\t\t\t\tcase constants.KEY_ESC:\r\n\t\t\t\t\tif (self.isOpen) {\r\n\t\t\t\t\t\tpreventDefault(evt,true);\r\n\t\t\t\t\t\tself.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.clearActiveItems();\r\n\t\t\t\treturn;\r\n\t\t\t\tcase constants.KEY_TAB:\r\n\t\t\t\t\tself.focus_node.tabIndex = -1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn self.onKeyDown.call(self,evt);\r\n\t\t});\r\n\r\n\t\tself.on('blur',()=>{\r\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\r\n\t\t});\r\n\r\n\r\n\t\t// give the control_input focus when the dropdown is open\r\n\t\tself.on('dropdown_open',() =>{\r\n\t\t\tself.control_input.focus();\r\n\t\t});\r\n\r\n\t\t// prevent onBlur from closing when focus is on the control_input\r\n\t\tconst orig_onBlur = self.onBlur;\r\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\r\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\r\n\t\t\treturn orig_onBlur.call(self);\r\n\t\t});\r\n\r\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\r\n\r\n\t\t// return focus to control to allow further keyboard input\r\n\t\tself.hook('before','close',() =>{\r\n\r\n\t\t\tif( !self.isOpen ) return;\r\n\t\t\tself.focus_node.focus({preventScroll: true});\r\n\t\t});\r\n\r\n\t});\r\n\r\n};\r\n","/**\r\n * Plugin: \"input_autogrow\" (Tom Select)\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport type TomSelect from '../../tom-select.ts';\r\nimport { addEvent } from '../../utils.ts';\r\n\r\nexport default function(this:TomSelect) {\r\n\tvar self\t\t\t\t\t= this;\r\n\r\n\tself.on('initialize',()=>{\r\n\r\n\r\n\t\tvar test_input\t\t\t\t= document.createElement('span');\r\n\t\tvar control\t\t\t\t\t= self.control_input;\r\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\r\n\r\n\t\tself.wrapper.appendChild(test_input);\r\n\r\n\r\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\r\n\r\n\t\tfor( const style_name of transfer_styles ){\r\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\r\n\t\t\ttest_input.style[style_name] = control.style[style_name];\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Set the control width\r\n\t\t *\r\n\t\t */\r\n\t\tvar resize = ()=>{\r\n\t\t\ttest_input.textContent\t= control.value;\r\n\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\r\n\t\t};\r\n\r\n\t\tresize();\r\n\t\tself.on('update item_add item_remove',resize);\r\n\t\taddEvent(control,'input', resize );\r\n\t\taddEvent(control,'keyup', resize );\r\n\t\taddEvent(control,'blur', resize );\r\n\t\taddEvent(control,'update', resize );\r\n\t});\r\n\r\n};\r\n","/**\r\n * Plugin: \"input_autogrow\" (Tom Select)\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport type TomSelect from '../../tom-select.ts';\r\n\r\nexport default function(this:TomSelect) {\r\n\tvar self = this;\r\n\tvar orig_deleteSelection = self.deleteSelection;\r\n\r\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\r\n\r\n\t\tif( self.activeItems.length ){\r\n\t\t\treturn orig_deleteSelection.call(self, evt);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t});\r\n\r\n};\r\n","/**\r\n * Plugin: \"no_active_items\" (Tom Select)\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport type TomSelect from '../../tom-select.ts';\r\n\r\nexport default function(this:TomSelect) {\r\n\tthis.hook('instead','setActiveItem',() => {});\r\n\tthis.hook('instead','selectAll',() => {});\r\n};\r\n","/**\r\n * Plugin: \"optgroup_columns\" (Tom Select.js)\r\n * Copyright (c) contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport type TomSelect from '../../tom-select.ts';\r\nimport * as constants from '../../constants.ts';\r\nimport { parentMatch, nodeIndex } from '../../vanilla.ts';\r\n\r\nexport default function(this:TomSelect) {\r\n\tvar self = this;\r\n\r\n\tvar orig_keydown = self.onKeyDown;\r\n\r\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\r\n\t\tvar index, option, options, optgroup;\r\n\r\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\r\n\t\t\treturn orig_keydown.call(self,evt);\r\n\t\t}\r\n\r\n\t\tself.ignoreHover\t= true;\r\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\r\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\r\n\r\n\t\tif( !optgroup ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\r\n\t\t\toptgroup = optgroup.previousSibling;\r\n\t\t} else {\r\n\t\t\toptgroup = optgroup.nextSibling;\r\n\t\t}\r\n\r\n\t\tif( !optgroup ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\r\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\r\n\r\n\t\tif( option ){\r\n\t\t\tself.setActiveOption(option);\r\n\t\t}\r\n\r\n\t});\r\n\r\n};\r\n","/**\r\n * Plugin: \"remove_button\" (Tom Select)\r\n * Copyright (c) contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport type TomSelect from '../../tom-select.ts';\r\nimport { getDom } from '../../vanilla.ts';\r\nimport { escape_html, preventDefault, addEvent } from '../../utils.ts';\r\nimport { TomOption, TomItem } from '../../types/index.ts';\r\nimport { RBOptions } from './types.ts';\r\n\r\nexport default function(this:TomSelect, userOptions:RBOptions) {\r\n\r\n\tconst options = Object.assign({\r\n\t\t\tlabel     : '&times;',\r\n\t\t\ttitle     : 'Remove',\r\n\t\t\tclassName : 'remove',\r\n\t\t\tappend    : true\r\n\t\t}, userOptions);\r\n\r\n\r\n\t//options.className = 'remove-single';\r\n\tvar self\t\t\t= this;\r\n\r\n\t// override the render method to add remove button to each item\r\n\tif( !options.append ){\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\r\n\r\n\tself.hook('after','setupTemplates',() => {\r\n\r\n\t\tvar orig_render_item = self.settings.render.item;\r\n\r\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\r\n\r\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\r\n\r\n\t\t\tvar close_button = getDom(html);\r\n\t\t\titem.appendChild(close_button);\r\n\r\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\r\n\t\t\t\tpreventDefault(evt,true);\r\n\t\t\t});\r\n\r\n\t\t\taddEvent(close_button,'click',(evt) => {\r\n\r\n\t\t\t\tif( self.isLocked ) return;\r\n\r\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\r\n\t\t\t\tpreventDefault(evt,true);\r\n\r\n\t\t\t\tif( self.isLocked ) return;\r\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\r\n\r\n\t\t\t\tself.removeItem(item);\r\n\t\t\t\tself.refreshOptions(false);\r\n\t\t\t\tself.inputState();\r\n\t\t\t});\r\n\r\n\t\t\treturn item;\r\n\t\t};\r\n\r\n\t});\r\n\r\n\r\n};\r\n","/**\r\n * Plugin: \"restore_on_backspace\" (Tom Select)\r\n * Copyright (c) contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\nimport type TomSelect from '../../tom-select.ts';\r\nimport { TomOption } from '../../types/index.ts';\r\n\r\ntype TPluginOptions = {\r\n\ttext?:(option:TomOption)=>string,\r\n};\r\n\r\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\r\n\tconst self = this;\r\n\r\n\tconst options = Object.assign({\r\n\t\ttext: (option:TomOption) => {\r\n\t\t\treturn option[self.settings.labelField];\r\n\t\t}\r\n\t},userOptions);\r\n\r\n\tself.on('item_remove',function(value:string){\r\n\t\tif( !self.isFocused ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif( self.control_input.value.trim() === '' ){\r\n\t\t\tvar option = self.options[value];\r\n\t\t\tif( option ){\r\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n};\r\n","/**\r\n * Plugin: \"restore_on_backspace\" (Tom Select)\r\n * Copyright (c) contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\nimport type TomSelect from '../../tom-select.ts';\r\nimport { TomOption } from '../../types/index.ts';\r\nimport { addClasses } from '../../vanilla.ts';\r\n\r\nexport default function(this:TomSelect) {\r\n\tconst self\t\t\t\t\t\t\t= this;\r\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\r\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\r\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\r\n\r\n\tvar pagination:{[key:string]:any}\t= {};\r\n\tvar dropdown_content:HTMLElement;\r\n\tvar loading_more\t\t\t\t\t= false;\r\n\tvar load_more_opt:HTMLElement;\r\n\tvar default_values: string[]\t\t= [];\r\n\r\n\tif( !self.settings.shouldLoadMore ){\r\n\r\n\t\t// return true if additional results should be loaded\r\n\t\tself.settings.shouldLoadMore = ():boolean=>{\r\n\r\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\r\n\t\t\tif( scroll_percent > 0.9 ){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif( self.activeOption ){\r\n\t\t\t\tvar selectable\t= self.selectable();\r\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\r\n\t\t\t\tif( index >= (selectable.length-2) ){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tif( !self.settings.firstUrl ){\r\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\r\n\t}\r\n\r\n\r\n\t// in order for virtual scrolling to work,\r\n\t// options need to be ordered the same way they're returned from the remote data source\r\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\r\n\r\n\r\n\t// can we load more results for given query?\r\n\tconst canLoadMore = (query:string):boolean => {\r\n\r\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif( (query in pagination) && pagination[query] ){\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t};\r\n\r\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\r\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\r\n\t// set the next url that will be\r\n\tself.setNextUrl = (value:string,next_url:any):void => {\r\n\t\tpagination[value] = next_url;\r\n\t};\r\n\r\n\t// getUrl() to be used in settings.load()\r\n\tself.getUrl = (query:string):any =>{\r\n\r\n\t\tif( query in pagination ){\r\n\t\t\tconst next_url = pagination[query];\r\n\t\t\tpagination[query] = false;\r\n\t\t\treturn next_url;\r\n\t\t}\r\n\r\n\t\t// if the user goes back to a previous query\r\n\t\t// we need to load the first page again\r\n\t\tself.clearPagination();\r\n\r\n\t\treturn self.settings.firstUrl.call(self,query);\r\n\t};\r\n\r\n\t// clear pagination\r\n\tself.clearPagination = ():void =>{\r\n\t\tpagination = {};\r\n\t};\r\n\r\n\t// don't clear the active option (and cause unwanted dropdown scroll)\r\n\t// while loading more results\r\n\tself.hook('instead','clearActiveOption',()=>{\r\n\r\n\t\tif( loading_more ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn orig_clearActiveOption.call(self);\r\n\t});\r\n\r\n\t// override the canLoad method\r\n\tself.hook('instead','canLoad',(query:string)=>{\r\n\r\n\t\t// first time the query has been seen\r\n\t\tif( !(query in pagination) ){\r\n\t\t\treturn orig_canLoad.call(self,query);\r\n\t\t}\r\n\r\n\t\treturn canLoadMore(query);\r\n\t});\r\n\r\n\r\n\t// wrap the load\r\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\r\n\r\n\t\tif( !loading_more ){\r\n\t\t\tself.clearOptions(clearFilter);\r\n\t\t}else if( load_more_opt ){\r\n\t\t\tconst first_option = options[0];\r\n\t\t\tif( first_option !== undefined ){\r\n\t\t\t\tload_more_opt.dataset.value\t\t= first_option[self.settings.valueField];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\torig_loadCallback.call( self, options, optgroups);\r\n\r\n\t\tloading_more = false;\r\n\t});\r\n\r\n\r\n\t// add templates to dropdown\r\n\t//\tloading_more if we have another url in the queue\r\n\t//\tno_more_results if we don't have another url in the queue\r\n\tself.hook('after','refreshOptions',()=>{\r\n\r\n\t\tconst query\t\t= self.lastValue;\r\n\t\tvar option;\r\n\r\n\t\tif( canLoadMore(query) ){\r\n\r\n\t\t\toption = self.render('loading_more',{query:query});\r\n\t\t\tif( option ){\r\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\r\n\t\t\t\tload_more_opt = option;\r\n\t\t\t}\r\n\r\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\r\n\t\t\toption = self.render('no_more_results',{query:query});\r\n\t\t}\r\n\r\n\t\tif( option ){\r\n\t\t\taddClasses(option,self.settings.optionClass);\r\n\t\t\tdropdown_content.append( option );\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\t// add scroll listener and default templates\r\n\tself.on('initialize',()=>{\r\n\t\tdefault_values = Object.keys(self.options);\r\n\t\tdropdown_content = self.dropdown_content;\r\n\r\n\t\t// default templates\r\n\t\tself.settings.render = Object.assign({}, {\r\n\t\t\tloading_more:() => {\r\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\r\n\t\t\t},\r\n\t\t\tno_more_results:() =>{\r\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\r\n\t\t\t}\r\n\t\t},self.settings.render);\r\n\r\n\r\n\t\t// watch dropdown content scroll position\r\n\t\tdropdown_content.addEventListener('scroll',()=>{\r\n\r\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\r\n\t\t\tif( !canLoadMore(self.lastValue) ){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// don't call load() too much\r\n\t\t\tif( loading_more ) return;\r\n\r\n\r\n\t\t\tloading_more = true;\r\n\t\t\tself.load.call(self,self.lastValue);\r\n\t\t});\r\n\t});\r\n\r\n};\r\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","this","_events","on","fct","event_array","push","off","n","arguments","length","undefined","splice","indexOf","trigger","args","self","apply","arrayToPattern","chars","filter","Boolean","maxValueLength","join","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","i","setToPattern","Array","from","Set","size","escape_regex","str","replace","reduce","longest","value","Math","max","unicodeLength","allSubstrings","input","result","start","substring","subresult","tmp","slice","charAt","unshift","code_points","unicode_map","multi_char_reg","latin_convert","latin_condensed","a","aa","ae","ao","au","av","ay","b","c","d","e","f","g","h","j","k","l","m","o","oe","oi","oo","ou","p","q","r","s","t","th","tz","u","v","vy","w","y","z","hv","latin","unicode","convert_pat","RegExp","Object","keys","normalize","form","asciifold","_asciifold","toLowerCase","generateSets","unicode_sets","addMatching","folded","to_add","folded_set","patt","match","add","code_point_min","code_point_max","composed","String","fromCharCode","code_point","generator","generateMap","multi_char","set","sort","multi_char_patt","substringsToPattern","min_replacement","map","sub_pat","strings","chars_replaced","mapSequence","sequencesToPattern","sequences","all","sequence","seq","len","substrs","inSequences","needle_seq","end","needle_parts","parts","part","needle_part","substr","Sequence","min","last","clone","position","last_piece","JSON","parse","stringify","last_part","pop","last_substr","clone_last_len","getPattern","match_str","overlapping","added_types","has","new_seq","old_seq","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","token","weight","score","pos","regex","search","string","propToArray","key","isArray","iterate","object","hasOwnProperty","cmp","Sifter","items","settings","diacritics","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_flds","sort_empty","bind","get_field","id","fld","direction","sort_fld","optsUser","assign","trim","total","fn_score","item","_","fn_sort","limit","hash_key","get_hash","escape_html","loadDebounce","fn","delay","timeout","loading","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","target","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","el","existing_id","getAttribute","setAttribute","addSlashes","append","parent","node","getDom","jquery","HTMLElement","isHtmlString","tpl","document","createElement","innerHTML","content","firstChild","querySelector","arg","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","cls","classList","removeClasses","remove","_classes","concat","parentMatch","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","refreshThrottle","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","init_select","optionsMap","group_count","$order","readData","dataset","json","addOption","group","arr","option_data","disabled","$option","selected","hasAttribute","children","child","optgroup","optgroup_data","init_textbox","data_raw","opt","values","instance_i","TomSelect","Interface","super","requested","loaded","define","initializePlugins","queue","plugin","require","loadPlugin","Error","MicroPlugin","input_arg","user_settings","dir","order","isOpen","isDisabled","isReadOnly","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","lastValue","caretPos","activeOption","activeItems","userOptions","refreshTimeout","tomselect","window","getComputedStyle","getPropertyValue","tabIndex","is_select_tag","rtl","inputId","isRequired","required","sifter","setupCallbacks","setupTemplates","control","dropdown","_render","dropdown_content","inputMode","control_input","focus_node","setup","passive_event","passive","listboxId","role","control_id","escapeQuery","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","positionDropdown","_destroy","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","readOnly","setReadOnly","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","optgroup_header","escape","option_create","no_results","not_loading","callbacks","initialize","change","item_add","item_remove","item_select","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","addItem","createItem","character","keyCode","which","constants","selectAll","open","next","getAdjacent","setActiveOption","prev","canSelect","activeElement","advanceSelection","deleteSelection","_onInput","refreshOptions","wasFocused","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","addItems","setMaxItems","eventName","begin","swap","getLastActive","prototype","setActiveItemClass","removeActiveItem","last_active","idx","scroll","scrollToOption","behavior","height_menu","clientHeight","scrollTop","height_item","offsetHeight","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","nesting","calculateScore","currentResults","hashed","triggerDropdown","html","has_create_option","active_group","groups","groups_order","same_query","results","active_option","show_dropdown","closest","getGroupFragment","group_order_i","order_group","fragment","group_fragment","createDocumentFragment","opt_value","opt_hash","option_el","getOption","includes","self_optgroup","$id","toString","elements","group_order","group_heading","group_options","header","group_html","querySelectorAll","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","data_old","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","last_item","x","isPending","wasFull","isFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","selectionStart","selectionEnd","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","setLocked","setDisabled","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","orig_onOptionSelect","cbOptions","checkedClassNames","uncheckedClassNames","UpdateChecked","checkbox","toCheck","checked","UpdateCheckbox","HTMLInputElement","orig_render_option","rendered","prepend","title","button","orig_lock","orig_unlock","drag_item","sortable","orig_render_item","draggable","dragOver","moveitem","targetitem","dragitem","insertAfter","referenceNode","newNode","_referenceNode$parent","isBefore","_newNode","nextSibling","_referenceNode$parent2","dragLeave","dragend","_drag_item","headerClass","titleRowClass","labelClass","closeClass","close_link","div","orig_onBlur","relatedTarget","preventScroll","test_input","cssText","style_name","resize","clientWidth","orig_deleteSelection","orig_keydown","previousSibling","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","load_more_opt","pagination","loading_more","default_values","shouldLoadMore","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","clearPagination","first_option","no_more_results"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5]}